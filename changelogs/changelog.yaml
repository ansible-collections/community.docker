---
ancestor: null
releases:
  0.1.0:
    changes:
      bugfixes:
        - docker_login - fix internal config file storage to handle credentials for
          more than one registry (https://github.com/ansible-collections/community.general/issues/1117).
      minor_changes:
        - docker_container - now supports the ``device_requests`` option, which allows
          to request additional resources such as GPUs (https://github.com/ansible/ansible/issues/65748,
          https://github.com/ansible-collections/community.general/pull/1119).
      release_summary: 'The ``community.docker`` continues the work on the Ansible
        docker modules and plugins from their state in ``community.general`` 1.2.0.
        The changes listed here are thus relative to the modules and plugins ``community.general.docker*``.


        All deprecation removals planned for ``community.general`` 2.0.0 have been
        applied. All deprecation removals scheduled for ``community.general`` 3.0.0
        have been re-scheduled for ``community.docker`` 2.0.0.

        '
      removed_features:
        - docker_container - no longer returns ``ansible_facts`` (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_container - the default of ``networks_cli_compatible`` changed to
          ``true`` (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_container - the unused option ``trust_image_content`` has been removed
          (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_image - ``state=build`` has been removed. Use ``present`` instead
          (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_image - the ``container_limits``, ``dockerfile``, ``http_timeout``,
          ``nocache``, ``rm``, ``path``, ``buildargs``, ``pull`` have been removed.
          Use the corresponding suboptions of ``build`` instead (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_image - the ``force`` option has been removed. Use the more specific
          ``force_*`` options instead (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_image - the ``source`` option is now mandatory (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_image - the ``use_tls`` option has been removed. Use ``tls`` and
          ``validate_certs`` instead (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_image - the default of the ``build.pull`` option changed to ``false``
          (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_image_facts - this alias is on longer available, use ``docker_image_info``
          instead (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_network - no longer returns ``ansible_facts`` (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_network - the ``ipam_options`` option has been removed. Use ``ipam_config``
          instead (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_service - no longer returns ``ansible_facts`` (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_swarm - ``state=inspect`` has been removed. Use ``docker_swarm_info``
          instead (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_swarm_service - the ``constraints`` option has been removed. Use
          ``placement.constraints`` instead (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_swarm_service - the ``limit_cpu`` and ``limit_memory`` options has
          been removed. Use the corresponding suboptions in ``limits`` instead (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_swarm_service - the ``log_driver`` and ``log_driver_options`` options
          has been removed. Use the corresponding suboptions in ``logging`` instead
          (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_swarm_service - the ``reserve_cpu`` and ``reserve_memory`` options
          has been removed. Use the corresponding suboptions in ``reservations`` instead
          (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_swarm_service - the ``restart_policy``, ``restart_policy_attempts``,
          ``restart_policy_delay`` and ``restart_policy_window`` options has been
          removed. Use the corresponding suboptions in ``restart_config`` instead
          (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_swarm_service - the ``update_delay``, ``update_parallelism``, ``update_failure_action``,
          ``update_monitor``, ``update_max_failure_ratio`` and ``update_order`` options
          has been removed. Use the corresponding suboptions in ``update_config``
          instead (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_volume - no longer returns ``ansible_facts`` (https://github.com/ansible-collections/community.docker/pull/1).
        - docker_volume - the ``force`` option has been removed. Use ``recreate``
          instead (https://github.com/ansible-collections/community.docker/pull/1).
    fragments:
      - 0.1.0.yml
      - c.g-1118-docker_login-config-store.yml
      - c.g-1119-docker_container-device-reqests.yml
      - c.g-2.0.0-deprecations.yml
    release_date: '2020-10-30'
  1.0.0:
    changes:
      minor_changes:
        - Add collection-side support of the ``docker`` action group / module defaults
          group (https://github.com/ansible-collections/community.docker/pull/17).
        - docker_image - return docker build output (https://github.com/ansible-collections/community.general/pull/805).
        - docker_secret - add a warning when the secret does not have an ``ansible_key``
          label but the ``force`` parameter is not set (https://github.com/ansible-collections/community.docker/issues/30,
          https://github.com/ansible-collections/community.docker/pull/31).
      release_summary: 'This is the first production (non-prerelease) release of ``community.docker``.

        '
    fragments:
      - 1.0.0.yml
      - 17-action-group.yml
      - 31-docker-secret.yml
      - community.general-805-docker_image-build-output.yml
    release_date: '2020-11-17'
  1.0.1:
    changes:
      bugfixes:
        - docker_container - the validation for ``capabilities`` in ``device_requests``
          was incorrect (https://github.com/ansible-collections/community.docker/issues/42,
          https://github.com/ansible-collections/community.docker/pull/43).
      release_summary: Maintenance release with a bugfix for ``docker_container``.
    fragments:
      - 1.0.1.yml
      - 43-docker_container-device_requests.yml
    release_date: '2020-12-11'
  1.1.0:
    changes:
      bugfixes:
        - docker_image - if ``push=true`` is used with ``repository``, and the image
          does not need to be tagged, still push. This can happen if ``repository``
          and ``name`` are equal (https://github.com/ansible-collections/community.docker/issues/52,
          https://github.com/ansible-collections/community.docker/pull/53).
        - docker_image - report error when loading a broken archive that contains
          no image (https://github.com/ansible-collections/community.docker/issues/46,
          https://github.com/ansible-collections/community.docker/pull/55).
        - docker_image - report error when the loaded archive does not contain the
          specified image (https://github.com/ansible-collections/community.docker/issues/41,
          https://github.com/ansible-collections/community.docker/pull/55).
      deprecated_features:
        - docker_container - currently ``published_ports`` can contain port mappings
          next to the special value ``all``, in which case the port mappings are ignored.
          This behavior is deprecated for community.docker 2.0.0, at which point it
          will either be forbidden, or this behavior will be properly implemented
          similar to how the Docker CLI tool handles this (https://github.com/ansible-collections/community.docker/issues/8,
          https://github.com/ansible-collections/community.docker/pull/60).
      minor_changes:
        - docker_container - support specifying ``cgroup_parent`` (https://github.com/ansible-collections/community.docker/issues/6,
          https://github.com/ansible-collections/community.docker/pull/59).
        - docker_container - when a container is started with ``detached=false``,
          ``status`` is now also returned when it is 0 (https://github.com/ansible-collections/community.docker/issues/26,
          https://github.com/ansible-collections/community.docker/pull/58).
        - docker_image - support ``platform`` when building images (https://github.com/ansible-collections/community.docker/issues/22,
          https://github.com/ansible-collections/community.docker/pull/54).
      release_summary: Feature release with three new plugins and modules.
    fragments:
      - 1.1.0.yml
      - 53-docker_image-tag-push.yml
      - 54-docker_image-build-platform.yml
      - 55-docker_image-loading.yml
      - 58-docker_container-non-detached-status.yml
      - 59-docker_container-cgroup-parent.yml
      - 60-docker_container-publish-all.yml
    modules:
      - description: Return facts about whether the module runs in a Docker container
        name: current_container_facts
        namespace: ''
    plugins:
      connection:
        - description: Run tasks in docker containers
          name: docker_api
          namespace: null
      inventory:
        - description: Ansible dynamic inventory plugin for Docker containers.
          name: docker_containers
          namespace: null
    release_date: '2021-01-03'
  1.2.0:
    changes:
      bugfixes:
        - docker_container - allow IPv6 zones (RFC 4007) in bind IPs (https://github.com/ansible-collections/community.docker/pull/66).
        - docker_image - fix crash on loading images with versions of Docker SDK for
          Python before 2.5.0 (https://github.com/ansible-collections/community.docker/issues/72,
          https://github.com/ansible-collections/community.docker/pull/73).
      minor_changes:
        - docker_container - added ``default_host_ip`` option which allows to explicitly
          set the default IP string for published ports without explicitly specified
          IPs. When using IPv6 binds with Docker 20.10.2 or newer, this needs to be
          set to an empty string (``""``) (https://github.com/ansible-collections/community.docker/issues/70,
          https://github.com/ansible-collections/community.docker/pull/71).
      release_summary: Feature release with one new feature and two bugfixes.
    fragments:
      - 1.2.0.yml
      - 66-ipv6-zones.yml
      - 71-docker_container-default_host_ip.yml
      - 73-docker_image-fix-old-docker-py-version.yml
    release_date: '2021-01-25'
  1.2.1:
    changes:
      bugfixes:
        - docker connection plugin - fix Docker version parsing, as some docker versions
          have a leading ``v`` in the output of the command ``docker version --format
          "{{.Server.Version}}"`` (https://github.com/ansible-collections/community.docker/pull/76).
      release_summary: Bugfix release.
    fragments:
      - 1.2.1.yml
      - 76-leading-v-support-in-docker-version.yml
    release_date: '2021-01-28'
  1.2.2:
    changes:
      release_summary: Security bugfix release to address CVE-2021-20191.
      security_fixes:
        - docker_swarm - enabled ``no_log`` for the option ``signing_ca_key`` to prevent
          accidental disclosure (CVE-2021-20191, https://github.com/ansible-collections/community.docker/pull/80).
    fragments:
      - 1.2.2.yml
      - CVE-2021-20191_no_log.yml
    release_date: '2021-02-05'
  1.3.0:
    changes:
      bugfixes:
        - docker_container - fix healthcheck disabling idempotency issue with strict
          comparison (https://github.com/ansible-collections/community.docker/issues/85).
        - docker_image - prevent module failure when removing image that is removed
          between inspection and removal (https://github.com/ansible-collections/community.docker/pull/87).
        - docker_image - prevent module failure when removing non-existent image by
          ID (https://github.com/ansible-collections/community.docker/pull/87).
        - docker_image_info - prevent module failure when image vanishes between listing
          and inspection (https://github.com/ansible-collections/community.docker/pull/87).
        - docker_image_info - prevent module failure when querying non-existent image
          by ID (https://github.com/ansible-collections/community.docker/pull/87).
      minor_changes:
        - docker_container - add ``storage_opts`` option to specify storage options
          (https://github.com/ansible-collections/community.docker/issues/91, https://github.com/ansible-collections/community.docker/pull/93).
        - docker_image - allows to specify platform to pull for ``source=pull`` with
          new option ``pull_platform`` (https://github.com/ansible-collections/community.docker/issues/79,
          https://github.com/ansible-collections/community.docker/pull/89).
        - docker_image - properly support image IDs (hashes) for loading and tagging
          images (https://github.com/ansible-collections/community.docker/issues/86,
          https://github.com/ansible-collections/community.docker/pull/87).
        - docker_swarm_service - adding support for maximum number of tasks per node
          (``replicas_max_per_node``) when running swarm service in replicated mode.
          Introduced in API 1.40 (https://github.com/ansible-collections/community.docker/issues/7,
          https://github.com/ansible-collections/community.docker/pull/92).
      release_summary: Regular feature and bugfix release.
    fragments:
      - 1.3.0.yml
      - 87-docker_image-load-image-ids.yml
      - 88-docker_container-healthcheck.yml
      - 89-docker_image-pull-platform.yml
      - 92-replicas-max-per-node.yml
      - 93-docker_container-storage_opts.yml
    modules:
      - description: Load docker image(s) from archives
        name: docker_image_load
        namespace: ''
      - description: Manage Docker plugins
        name: docker_plugin
        namespace: ''
    release_date: '2021-03-08'
  1.4.0:
    changes:
      breaking_changes:
        - docker_swarm - if ``join_token`` is specified, a returned join token with
          the same value will be replaced by ``VALUE_SPECIFIED_IN_NO_LOG_PARAMETER``.
          Make sure that you do not blindly use the join tokens from the return value
          of this module when the module is invoked with ``join_token`` specified!
          This breaking change appears in a minor release since it is necessary to
          fix a security issue (https://github.com/ansible-collections/community.docker/pull/103).
      bugfixes:
        - '``docker_swarm_service`` - fix KeyError on caused by reference to deprecated
          option ``update_failure_action`` (https://github.com/ansible-collections/community.docker/pull/100).'
        - docker_swarm_service - mark ``secrets`` module option with ``no_log=False``
          since it does not leak secrets (https://github.com/ansible-collections/community.general/pull/2001).
      minor_changes:
        - docker_swarm_service - change ``publish.published_port`` option from mandatory
          to optional. Docker will assign random high port if not specified (https://github.com/ansible-collections/community.docker/issues/99).
      release_summary: Security release to address another potential secret leak.
        Also includes regular bugfixes and features.
      security_fixes:
        - docker_swarm - the ``join_token`` option is now marked as ``no_log`` so
          it is no longer written into logs (https://github.com/ansible-collections/community.docker/pull/103).
    fragments:
      - 1.4.0.yml
      - 100-fix-update_failture_action-keyerror-in-docker_swarm_service.yaml
      - 101-make-service-published-port-optional.yaml
      - 102-no_log-false.yml
      - 103-docker_swarm-join_token.yml
    release_date: '2021-03-14'
  1.5.0:
    changes:
      bugfixes:
        - all modules - use ``to_native`` to convert exceptions to strings (https://github.com/ansible-collections/community.docker/pull/121).
      minor_changes:
        - Add the ``use_ssh_client`` option to most docker modules and plugins (https://github.com/ansible-collections/community.docker/issues/108,
          https://github.com/ansible-collections/community.docker/pull/114).
      release_summary: Regular feature release.
    fragments:
      - 1.5.0.yml
      - 114-use_ssh_client.yml
      - 121-exception-handling.yml
    modules:
      - description: Execute command in a docker container
        name: docker_container_exec
        namespace: ''
    release_date: '2021-04-11'
  1.6.0:
    changes:
      bugfixes:
        - 'docker-compose - fix not pulling when ``state: present`` and ``stopped:
          true`` (https://github.com/ansible-collections/community.docker/issues/12,
          https://github.com/ansible-collections/community.docker/pull/119).'
        - docker_plugin - also configure plugin after installing (https://github.com/ansible-collections/community.docker/issues/118,
          https://github.com/ansible-collections/community.docker/pull/135).
        - docker_swarm_services - avoid crash during idempotence check if ``published_port``
          is not specified (https://github.com/ansible-collections/community.docker/issues/107,
          https://github.com/ansible-collections/community.docker/pull/136).
      deprecated_features:
        - docker_* modules and plugins, except ``docker_swarm`` connection plugin
          and ``docker_compose`` and ``docker_stack*` modules - the current default
          ``localhost`` for ``tls_hostname`` is deprecated. In community.docker 2.0.0
          it will be computed from ``docker_host`` instead (https://github.com/ansible-collections/community.docker/pull/134).
      minor_changes:
        - common module utils - correct error messages for guiding to install proper
          Docker SDK for Python module (https://github.com/ansible-collections/community.docker/pull/125).
        - 'docker_container - allow ``memory_swap: -1`` to set memory swap limit to
          unlimited. This is useful when the user cannot set memory swap limits due
          to cgroup limitations or other reasons, as by default Docker will try to
          set swap usage to two times the value of ``memory`` (https://github.com/ansible-collections/community.docker/pull/138).'
      release_summary: Regular bugfix and feature release.
    fragments:
      - 1.6.0.yml
      - 12-correct_pull_wo_starting.yaml
      - 125-correct-error-message-for-docker-sdk-version.yaml
      - 134-tls_hostname.yml
      - 135-docker_plugin-config.yml
      - 136-docker_swarm_service-fix-idempotence-bug.yml
      - 138-docker_container-allow-memory-swap-unlimited.yml
    release_date: '2021-05-11'
  1.6.1:
    changes:
      bugfixes:
        - docker_* modules and plugins, except ``docker_swarm`` connection plugin
          and ``docker_compose`` and ``docker_stack*` modules - only emit ``tls_hostname``
          deprecation message if TLS is actually used (https://github.com/ansible-collections/community.docker/pull/143).
      release_summary: Bugfix release to reduce deprecation warning spam.
    fragments:
      - 1.6.1.yml
      - 143-tls_hostname-deprecation.yml
    release_date: '2021-05-17'
  1.7.0:
    changes:
      minor_changes:
        - docker_image - allow to tag images by ID (https://github.com/ansible-collections/community.docker/pull/149).
      release_summary: Small feature and bugfix release.
    fragments:
      - 1.7.0.yml
      - 149-docker_image-tagging.yml
    release_date: '2021-06-08'
  1.8.0:
    changes:
      bugfixes:
        - 'docker_compose - fix idempotence bug when using ``stopped: true`` (https://github.com/ansible-collections/community.docker/issues/142,
          https://github.com/ansible-collections/community.docker/pull/159).'
      minor_changes:
        - Avoid internal ansible-core module_utils in favor of equivalent public API
          available since at least Ansible 2.9 (https://github.com/ansible-collections/community.docker/pull/164).
        - docker_compose - added ``profiles`` option to specify service profiles when
          starting services (https://github.com/ansible-collections/community.docker/pull/167).
        - docker_containers inventory plugin - when ``connection_type=docker-api``,
          now pass Docker daemon connection options from inventory plugin to connection
          plugin. This can be disabled by setting ``configure_docker_daemon=false``
          (https://github.com/ansible-collections/community.docker/pull/157).
        - docker_host_info - allow values for keys in ``containers_filters``, ``images_filters``,
          ``networks_filters``, and ``volumes_filters`` to be passed as YAML lists
          (https://github.com/ansible-collections/community.docker/pull/160).
        - docker_plugin - added ``alias`` option to specify local names for docker
          plugins (https://github.com/ansible-collections/community.docker/pull/161).
      release_summary: Regular bugfix and feature release.
    fragments:
      - 1.8.0.yml
      - 157-inventory-connection-options.yml
      - 159-docker_compose-idempotence-fix.yml
      - 160-docker_host_info-label-fitler-lists.yml
      - 161-docker_plugin-alias-option.yml
      - 167-docker_compose-profiles-option.yml
      - ansible-core-_text.yml
    release_date: '2021-06-28'
  1.9.0:
    changes:
      bugfixes:
        - docker_compose - fixes task failures when bringing up services while using
          ``docker-compose <1.17.0`` (https://github.com/ansible-collections/community.docker/issues/180).
        - docker_container - make sure to also return ``container`` on ``detached=false``
          when status code is non-zero (https://github.com/ansible-collections/community.docker/pull/178).
        - docker_stack_info - make sure that module isn't skipped in check mode (https://github.com/ansible-collections/community.docker/pull/183).
        - docker_stack_task_info - make sure that module isn't skipped in check mode
          (https://github.com/ansible-collections/community.docker/pull/183).
      deprecated_features:
        - docker_container - the new ``command_handling``'s default value, ``compatibility``,
          is deprecated and will change to ``correct`` in community.docker 3.0.0.
          A deprecation warning is emitted by the module in cases where the behavior
          will change. Please note that ansible-core will output a deprecation warning
          only once, so if it is shown for an earlier task, there could be more tasks
          with this warning where it is not shown (https://github.com/ansible-collections/community.docker/pull/186).
      minor_changes:
        - docker_* modules - include ``ImportError`` traceback when reporting that
          Docker SDK for Python could not be found (https://github.com/ansible-collections/community.docker/pull/188).
        - docker_compose - added ``env_file`` option for specifying custom environment
          files (https://github.com/ansible-collections/community.docker/pull/174).
        - docker_container - added ``publish_all_ports`` option to publish all exposed
          ports to random ports except those explicitly bound with ``published_ports``
          (this was already added in community.docker 1.8.0) (https://github.com/ansible-collections/community.docker/pull/162).
        - docker_container - added new ``command_handling`` option with current deprecated
          default value ``compatibility`` which allows to control how the module handles
          shell quoting when interpreting lists, and how the module handles empty
          lists/strings. The default will switch to ``correct`` in community.docker
          3.0.0 (https://github.com/ansible-collections/community.docker/pull/186).
        - docker_container - lifted restriction preventing the creation of anonymous
          volumes with the ``mounts`` option (https://github.com/ansible-collections/community.docker/pull/181).
      release_summary: New bugfixes and features release.
    fragments:
      - 1.9.0.yml
      - 162-docker_container_publish_all_option.yml
      - 174-docker_compose-env_file.yml
      - 178-docker_container-container.yml
      - 181-docker_container-allow-anonymous-volume-mounts.yml
      - 182-docker_compose-fix-start-keyword-failures.yml
      - 183-info-check_mode.yml
      - 186-docker_container-command-entrypoint.yml
      - 188-improve-import-errors.yml
    plugins:
      connection:
        - description: execute on host running controller container
          name: nsenter
          namespace: null
    release_date: '2021-08-03'
  1.9.1:
    changes:
      bugfixes:
        - docker_compose - fixed incorrect ``changed`` status for services with ``profiles``
          defined, but none enabled (https://github.com/ansible-collections/community.docker/pull/192).
      release_summary: Regular bugfix release.
    fragments:
      - 1.9.1.yml
      - 192-docker_compose-profiles-idempotency-fix.yml
    release_date: '2021-08-29'
  1.10.0:
    changes:
      minor_changes:
        - Add the modules docker_container_exec, docker_image_load and docker_plugin
          to the ``docker`` module defaults group (https://github.com/ansible-collections/community.docker/pull/209).
        - docker_config - add option ``data_src`` to read configuration data from
          target (https://github.com/ansible-collections/community.docker/issues/64,
          https://github.com/ansible-collections/community.docker/pull/203).
        - docker_secret - add option ``data_src`` to read secret data from target
          (https://github.com/ansible-collections/community.docker/issues/64, https://github.com/ansible-collections/community.docker/pull/203).
      release_summary: Regular feature and bugfix release.
    fragments:
      - 1.10.0.yml
      - 203-docker_secret-config-data_src.yml
      - 209-action-group.yml
    release_date: '2021-10-05'
  2.0.0:
    changes:
      breaking_changes:
        - docker_compose - fixed ``timeout`` defaulting behavior so that ``stop_grace_period``,
          if defined in the compose file, will be used if ``timeout`` is not specified
          (https://github.com/ansible-collections/community.docker/pull/163).
      deprecated_features:
        - docker_container - using the special value ``all`` in ``published_ports``
          has been deprecated. Use ``publish_all_ports=true`` instead (https://github.com/ansible-collections/community.docker/pull/210).
      release_summary: New major release with some deprecations removed and a breaking
        change in the ``docker_compose`` module regarding the ``timeout`` parameter.
      removed_features:
        - docker_container - the default value of ``container_default_behavior`` changed
          to ``no_defaults`` (https://github.com/ansible-collections/community.docker/pull/210).
        - docker_container - the default value of ``network_mode`` is now the name
          of the first network specified in ``networks`` if such are specified and
          ``networks_cli_compatible=true`` (https://github.com/ansible-collections/community.docker/pull/210).
        - docker_container - the special value ``all`` can no longer be used in ``published_ports``
          next to other values. Please use ``publish_all_ports=true`` instead (https://github.com/ansible-collections/community.docker/pull/210).
        - docker_login - removed the ``email`` option (https://github.com/ansible-collections/community.docker/pull/210).
    fragments:
      - 163-docker_compose-timeout-fix.yml
      - 2.0.0.yml
      - 210-deprecations.yml
    release_date: '2021-10-21'
  2.0.1:
    changes:
      release_summary: Maintenance release with some documentation fixes.
    fragments:
      - 2.0.1.yml
    release_date: '2021-11-13'
  2.0.2:
    changes:
      bugfixes:
        - docker_api connection plugin - avoid passing an unnecessary argument to
          a Docker SDK for Python call that is only supported by version 3.0.0 or
          later (https://github.com/ansible-collections/community.docker/pull/243).
        - docker_container_exec - ``chdir`` is only supported since Docker SDK for
          Python 3.0.0. Make sure that this option can only use when 3.0.0 or later
          is installed, and prevent passing this parameter on when ``chdir`` is not
          provided to this module (https://github.com/ansible-collections/community.docker/pull/243,
          https://github.com/ansible-collections/community.docker/issues/242).
        - nsenter connection plugin - ensure the ``nsenter_pid`` option is retrieved
          in ``_connect`` instead of ``__init__`` to prevent a crash due to bad initialization
          order (https://github.com/ansible-collections/community.docker/pull/249).
        - nsenter connection plugin - replace the use of ``--all-namespaces`` with
          specific namespaces to support compatibility with Busybox nsenter (used
          on, for example, Alpine containers) (https://github.com/ansible-collections/community.docker/pull/249).
      release_summary: Bugfix release.
    fragments:
      - 2.0.2.yml
      - 243-docker_container_exec-chdir.yml
      - 249-nsenter-fixes.yml
    release_date: '2021-12-09'
  2.1.0:
    changes:
      bugfixes:
        - Various modules and plugins - use vendored version of ``distutils.version``
          included in ansible-core 2.12 if available. This avoids breakage when ``distutils``
          is removed from the standard library of Python 3.12. Note that ansible-core
          2.11, ansible-base 2.10 and Ansible 2.9 are right now not compatible with
          Python 3.12, hence this fix does not target these ansible-core/-base/2.9
          versions (https://github.com/ansible-collections/community.docker/pull/258).
        - docker connection plugin - replace deprecated ``distutils.spawn.find_executable``
          with Ansible's ``get_bin_path`` to find the ``docker`` executable (https://github.com/ansible-collections/community.docker/pull/257).
        - docker_container_exec - disallow using the ``chdir`` option for Docker API
          before 1.35 (https://github.com/ansible-collections/community.docker/pull/253).
      minor_changes:
        - docker_container_exec - add ``detach`` parameter (https://github.com/ansible-collections/community.docker/issues/250,
          https://github.com/ansible-collections/community.docker/pull/255).
        - docker_container_exec - add ``env`` option (https://github.com/ansible-collections/community.docker/issues/248,
          https://github.com/ansible-collections/community.docker/pull/254).
      release_summary: Feature and bugfix release.
    fragments:
      - 2.1.0.yml
      - 253-chdir-min-version.yml
      - 254-docker_container_exec-env.yml
      - 255-docker_container_exec-detach.yml
      - 257-remove-distutils-spawn.yml
      - 258-distutils.version.yml
    release_date: '2022-01-04'
  2.1.1:
    changes:
      bugfixes:
        - Fix unintended breaking change caused by `an earlier fix <https://github.com/ansible-collections/community.docker/pull/258>`_
          by vendoring the deprecated Python standard library ``distutils.version``
          until this collection stops supporting Ansible 2.9 and ansible-base 2.10
          (https://github.com/ansible-collections/community.docker/issues/267, https://github.com/ansible-collections/community.docker/pull/269).
      release_summary: Emergency release to amend breaking change in previous release.
    fragments:
      - 2.1.1.yml
      - 269-distutils-version-fix.yml
    release_date: '2022-01-05'
  2.2.0:
    changes:
      bugfixes:
        - docker_container, docker_image - adjust image finding code to peculiarities
          of ``podman-docker``'s API emulation when Docker short names like ``redis``
          are used (https://github.com/ansible-collections/community.docker/issues/292).
      minor_changes:
        - docker_config - add support for rolling update, set ``rolling_versions``
          to ``true`` to enable (https://github.com/ansible-collections/community.docker/pull/295,
          https://github.com/ansible-collections/community.docker/issues/109).
        - docker_secret - add support for rolling update, set ``rolling_versions``
          to ``true`` to enable (https://github.com/ansible-collections/community.docker/pull/293,
          https://github.com/ansible-collections/community.docker/issues/21).
        - docker_swarm_service - add support for setting capabilities with the ``cap_add``
          and ``cap_drop`` parameters. Usage is the same as with the ``capabilities``
          and ``cap_drop`` parameters for ``docker_container`` (https://github.com/ansible-collections/community.docker/pull/294).
      release_summary: Regular feature and bugfix release.
    fragments:
      - 2.2.0.yml
      - 270-rolling-secrets.yml
      - 271-swarm-service-capabilities.yml
      - 272-rolling-configs.yml
      - 292-docker-podman-compatibility.yml
    release_date: '2022-02-21'
  2.2.1:
    changes:
      bugfixes:
        - docker_compose - fix Python 3 type error when extracting warnings or errors
          from docker-compose's output (https://github.com/ansible-collections/community.docker/pull/305).
      release_summary: Regular bugfix release.
    fragments:
      - 2.2.1.yml
      - 305-docker_compose-errors-warnings.yml
    release_date: '2022-03-14'
  2.3.0:
    changes:
      bugfixes:
        - docker connection plugin - fix option handling to be compatible with ansible-core
          2.13 (https://github.com/ansible-collections/community.docker/pull/297,
          https://github.com/ansible-collections/community.docker/issues/307).
        - docker_api connection plugin - fix option handling to be compatible with
          ansible-core 2.13 (https://github.com/ansible-collections/community.docker/pull/308).
      minor_changes:
        - docker connection plugin - implement connection reset by clearing internal
          container user cache (https://github.com/ansible-collections/community.docker/pull/312).
        - docker connection plugin - simplify ``actual_user`` handling code (https://github.com/ansible-collections/community.docker/pull/311).
        - docker connection plugin - the plugin supports new ways to define the timeout.
          These are the ``ANSIBLE_DOCKER_TIMEOUT`` environment variable, the ``timeout``
          setting in the ``docker_connection`` section of ``ansible.cfg``, and the
          ``ansible_docker_timeout`` variable (https://github.com/ansible-collections/community.docker/pull/297).
        - docker_api connection plugin - implement connection reset by clearing internal
          container user/group ID cache (https://github.com/ansible-collections/community.docker/pull/312).
        - docker_api connection plugin - the plugin supports new ways to define the
          timeout. These are the ``ANSIBLE_DOCKER_TIMEOUT`` environment variable,
          the ``timeout`` setting in the ``docker_connection`` section of ``ansible.cfg``,
          and the ``ansible_docker_timeout`` variable (https://github.com/ansible-collections/community.docker/pull/308).
      release_summary: Regular feature and bugfix release.
    fragments:
      - 2.3.0.yml
      - 297-docker-connection-config.yml
      - 308-docker_api-connection-config.yml
      - 311-docker-actual_user.yml
      - 312-docker-connection-reset.yml
    release_date: '2022-03-28'
  2.4.0:
    changes:
      bugfixes:
        - docker connection plugin - make sure that ``docker_extra_args`` is used
          for querying the Docker version. Also ensures that the Docker version is
          only queried when needed. This is currently the case if a remote user is
          specified (https://github.com/ansible-collections/community.docker/issues/325,
          https://github.com/ansible-collections/community.docker/pull/327).
      minor_changes:
        - Prepare collection for inclusion in an Execution Environment by declaring
          its dependencies. The ``docker_stack*`` modules are not supported (https://github.com/ansible-collections/community.docker/pull/336).
        - current_container_facts - add detection for GitHub Actions (https://github.com/ansible-collections/community.docker/pull/336).
        - docker_container - support returning Docker container log output when using
          Docker's ``local`` logging driver, an optimized local logging driver introduced
          in Docker 18.09 (https://github.com/ansible-collections/community.docker/pull/337).
      release_summary: Regular feature and bugfix release.
    fragments:
      - 2.4.0.yml
      - 327-connection-fix.yml
      - 336-ee.yml
      - 337-container-output-from-local-logging-driver.yml
    release_date: '2022-04-25'
  2.5.0:
    changes:
      minor_changes:
        - docker_config - add support for ``template_driver`` with one option ``golang``
          (https://github.com/ansible-collections/community.docker/issues/332, https://github.com/ansible-collections/community.docker/pull/345).
        - docker_swarm - adds ``data_path_addr`` parameter during swarm initialization
          or when joining (https://github.com/ansible-collections/community.docker/issues/339).
      release_summary: Regular feature release.
    fragments:
      - 2.5.0.yml
      - 344-adds-data-path-addr.yml
      - 345-docker_config-template-driver.yml
    release_date: '2022-05-14'
  2.5.1:
    changes:
      bugfixes:
        - Include ``PSF-license.txt`` file for ``plugins/module_utils/_version.py``.
      release_summary: Maintenance release.
    fragments:
      - 2.5.1.yml
      - psf-license.yml
    release_date: '2022-05-16'
  2.6.0:
    changes:
      bugfixes:
        - docker_container - fail with a meaningful message instead of crashing if
          a port is specified with more than three colon-separated parts (https://github.com/ansible-collections/community.docker/pull/367,
          https://github.com/ansible-collections/community.docker/issues/365).
        - docker_container - remove unused code that will cause problems with Python
          3.13 (https://github.com/ansible-collections/community.docker/pull/354).
      deprecated_features:
        - Support for Ansible 2.9 and ansible-base 2.10 is deprecated, and will be
          removed in the next major release (community.docker 3.0.0). Some modules
          might still work with these versions afterwards, but we will no longer keep
          compatibility code that was needed to support them (https://github.com/ansible-collections/community.docker/pull/361).
        - The dependency on docker-compose for Execution Environments is deprecated
          and will be removed in community.docker 3.0.0. The `Python docker-compose
          library <https://pypi.org/project/docker-compose/>`__ is unmaintained and
          can cause dependency issues. You can manually still install it in an Execution
          Environment when needed (https://github.com/ansible-collections/community.docker/pull/373).
        - Various modules - the default of ``tls_hostname`` that was supposed to be
          removed in community.docker 2.0.0 will now be removed in version 3.0.0 (https://github.com/ansible-collections/community.docker/pull/362).
        - docker_stack - the return values ``out`` and ``err`` that were supposed
          to be removed in community.docker 2.0.0 will now be removed in version 3.0.0
          (https://github.com/ansible-collections/community.docker/pull/362).
      minor_changes:
        - docker_container - added ``image_label_mismatch`` parameter (https://github.com/ansible-collections/community.docker/issues/314,
          https://github.com/ansible-collections/community.docker/pull/370).
      release_summary: Bugfix and feature release.
    fragments:
      - 2.6.0.yml
      - 354-remove-dead-code.yml
      - 362-deprecations.yml
      - 367-docker_container-ports-validation.yml
      - 370-add-image-label-mismatch.yml
      - 373-deprecate-docker-compose-dependency.yml
      - deprecate-ansible-2.9-2.10.yml
    release_date: '2022-05-24'
  2.7.0:
    changes:
      bugfixes:
        - Docker SDK for Python based modules and plugins - if the API version is
          specified as an option, use that one to validate API version requirements
          of module/plugin options instead of the latest API version supported by
          the Docker daemon. This also avoids one unnecessary API call per module/plugin
          (https://github.com/ansible-collections/community.docker/pull/389).
      deprecated_features:
        - Support for Docker API version 1.20 to 1.24 has been deprecated and will
          be removed in community.docker 3.0.0. The first Docker version supporting
          API version 1.25 was Docker 1.13, released in January 2017. This affects
          the modules ``docker_container``, ``docker_container_exec``, ``docker_container_info``,
          ``docker_compose``, ``docker_login``, ``docker_image``, ``docker_image_info``,
          ``docker_image_load``, ``docker_host_info``, ``docker_network``, ``docker_network_info``,
          ``docker_node_info``, ``docker_swarm_info``, ``docker_swarm_service``, ``docker_swarm_service_info``,
          ``docker_volume_info``, and ``docker_volume``, whose minimally supported
          API version is between 1.20 and 1.24 (https://github.com/ansible-collections/community.docker/pull/396).
        - Support for Python 2.6 is deprecated and will be removed in the next major
          release (community.docker 3.0.0). Some modules might still work with Python
          2.6, but we will no longer try to ensure compatibility (https://github.com/ansible-collections/community.docker/pull/388).
      minor_changes:
        - Move common utility functions from the ``common`` module_util to a new module_util
          called ``util``. This should not have any user-visible effect (https://github.com/ansible-collections/community.docker/pull/390).
      release_summary: Bugfix and deprecation release. The next 2.x.y releases will
        only be bugfix releases, the next expect minor/major release will be 3.0.0
        with some major changes.
    fragments:
      - 2.7.0.yml
      - 389-api-version.yml
      - 390-util.yml
      - 397-deprecate-docker-api-1.24.yml
      - python-2.6.yml
    release_date: '2022-07-02'
  3.0.0-a1:
    changes:
      breaking_changes:
        - This collection does not work with ansible-core 2.11 on Python 3.12+. Please
          either upgrade to ansible-core 2.12+, or use Python 3.11 or earlier (https://github.com/ansible-collections/community.docker/pull/271).
      major_changes:
        - The collection now contains vendored code from the Docker SDK for Python
          to talk to the Docker daemon. Modules and plugins using this code no longer
          need the Docker SDK for Python installed on the machine the module or plugin
          is running on (https://github.com/ansible-collections/community.docker/pull/398).
        - docker_api connection plugin - no longer uses the Docker SDK for Python.
          It requires ``requests`` to be installed, and depending on the features
          used has some more requirements. If the Docker SDK for Python is installed,
          these requirements are likely met (https://github.com/ansible-collections/community.docker/pull/414).
        - docker_container_exec - no longer uses the Docker SDK for Python. It requires
          ``requests`` to be installed, and depending on the features used has some
          more requirements. If the Docker SDK for Python is installed, these requirements
          are likely met (https://github.com/ansible-collections/community.docker/pull/401).
        - docker_container_info - no longer uses the Docker SDK for Python. It requires
          ``requests`` to be installed, and depending on the features used has some
          more requirements. If the Docker SDK for Python is installed, these requirements
          are likely met (https://github.com/ansible-collections/community.docker/pull/402).
        - docker_containers inventory plugin - no longer uses the Docker SDK for Python.
          It requires ``requests`` to be installed, and depending on the features
          used has some more requirements. If the Docker SDK for Python is installed,
          these requirements are likely met (https://github.com/ansible-collections/community.docker/pull/413).
        - docker_host_info - no longer uses the Docker SDK for Python. It requires
          ``requests`` to be installed, and depending on the features used has some
          more requirements. If the Docker SDK for Python is installed, these requirements
          are likely met (https://github.com/ansible-collections/community.docker/pull/403).
        - docker_image - no longer uses the Docker SDK for Python. It requires ``requests``
          to be installed, and depending on the features used has some more requirements.
          If the Docker SDK for Python is installed, these requirements are likely
          met (https://github.com/ansible-collections/community.docker/pull/404).
        - docker_image_info - no longer uses the Docker SDK for Python. It requires
          ``requests`` to be installed, and depending on the features used has some
          more requirements. If the Docker SDK for Python is installed, these requirements
          are likely met (https://github.com/ansible-collections/community.docker/pull/405).
        - docker_image_load - no longer uses the Docker SDK for Python. It requires
          ``requests`` to be installed, and depending on the features used has some
          more requirements. If the Docker SDK for Python is installed, these requirements
          are likely met (https://github.com/ansible-collections/community.docker/pull/406).
        - docker_login - no longer uses the Docker SDK for Python. It requires ``requests``
          to be installed, and depending on the features used has some more requirements.
          If the Docker SDK for Python is installed, these requirements are likely
          met (https://github.com/ansible-collections/community.docker/pull/407).
        - docker_network - no longer uses the Docker SDK for Python. It requires ``requests``
          to be installed, and depending on the features used has some more requirements.
          If the Docker SDK for Python is installed, these requirements are likely
          met (https://github.com/ansible-collections/community.docker/pull/408).
        - docker_network_info - no longer uses the Docker SDK for Python. It requires
          ``requests`` to be installed, and depending on the features used has some
          more requirements. If the Docker SDK for Python is installed, these requirements
          are likely met (https://github.com/ansible-collections/community.docker/pull/409).
        - docker_prune - no longer uses the Docker SDK for Python. It requires ``requests``
          to be installed, and depending on the features used has some more requirements.
          If the Docker SDK for Python is installed, these requirements are likely
          met (https://github.com/ansible-collections/community.docker/pull/410).
        - docker_volume - no longer uses the Docker SDK for Python. It requires ``requests``
          to be installed, and depending on the features used has some more requirements.
          If the Docker SDK for Python is installed, these requirements are likely
          met (https://github.com/ansible-collections/community.docker/pull/411).
        - docker_volume_info - no longer uses the Docker SDK for Python. It requires
          ``requests`` to be installed, and depending on the features used has some
          more requirements. If the Docker SDK for Python is installed, these requirements
          are likely met (https://github.com/ansible-collections/community.docker/pull/412).
      minor_changes:
        - Remove vendored copy of ``distutils.version`` in favor of vendored copy
          included with ansible-core 2.12+. For ansible-core 2.11, uses ``distutils.version``
          for Python < 3.12. There is no support for ansible-core 2.11 with Python
          3.12+ (https://github.com/ansible-collections/community.docker/pull/271).
        - socker_handler and socket_helper module utils - improve Python forward compatibility,
          create helper functions for file blocking/unblocking (https://github.com/ansible-collections/community.docker/pull/415).
      release_summary: First alpha prerelease of community.docker 3.0.0. This version
        has several breaking changes and features rewrites of several modules to directly
        use the API using ``requests``, instead of using the Docker SDK for Python.
      removed_features:
        - Execution Environments built with community.docker no longer include docker-compose
          < 2.0.0. If you need to use it with the ``docker_compose`` module, please
          install that requirement manually (https://github.com/ansible-collections/community.docker/pull/400).
        - Support for Ansible 2.9 and ansible-base 2.10 has been removed. If you need
          support for Ansible 2.9 or ansible-base 2.10, please use community.docker
          2.x.y (https://github.com/ansible-collections/community.docker/pull/400).
        - Support for Docker API versions 1.20 to 1.24 has been removed. If you need
          support for these API versions, please use community.docker 2.x.y (https://github.com/ansible-collections/community.docker/pull/400).
        - Support for Python 2.6 has been removed. If you need support for Python
          2.6, please use community.docker 2.x.y (https://github.com/ansible-collections/community.docker/pull/400).
        - Various modules - the default of ``tls_hostname`` (``localhost``) has been
          removed. If you want to continue using ``localhost``, you need to specify
          it explicitly (https://github.com/ansible-collections/community.docker/pull/363).
        - docker_container - the ``all`` value is no longer allowed in ``published_ports``.
          Use ``publish_all_ports=true`` instead (https://github.com/ansible-collections/community.docker/pull/399).
        - docker_container - the default of ``command_handling`` was changed from
          ``compatibility`` to ``correct``. Older versions were warning for every
          invocation of the module when this would result in a change of behavior
          (https://github.com/ansible-collections/community.docker/pull/399).
        - docker_stack - the return values ``out`` and ``err`` have been removed.
          Use ``stdout`` and ``stderr`` instead (https://github.com/ansible-collections/community.docker/pull/363).
    fragments:
      - 271-distutils-vendor-removed.yml
      - 3.0.0-a1.yml
      - 363-deprecations.yml
      - 398-docker-api.yml
      - 399-deprecations.yml
      - 400-deprecations.yml
      - 401-docker_container_exec-docker-api.yml
      - 402-docker-api.yml
      - 403-docker-api.yml
      - 404-docker-api.yml
      - 405-docker-api.yml
      - 406-docker-api.yml
      - 407-docker-api.yml
      - 408-docker-api.yml
      - 409-docker-api.yml
      - 410-docker-api.yml
      - 411-docker-api.yml
      - 412-docker-api.yml
      - 413-docker-api.yml
      - 414-docker-api.yml
      - 415-socket-improvements.yml
    release_date: '2022-07-07'
  3.0.0-a2:
    changes:
      breaking_changes:
        - docker_container - ``exposed_ports`` is no longer ignored in ``comparisons``.
          Before, its value was assumed to be identical with the value of ``published_ports``
          (https://github.com/ansible-collections/community.docker/pull/422).
        - docker_container - ``log_options`` can no longer be specified when ``log_driver``
          is not specified (https://github.com/ansible-collections/community.docker/pull/422).
        - docker_container - ``publish_all_ports`` is no longer ignored in ``comparisons``
          (https://github.com/ansible-collections/community.docker/pull/422).
        - docker_container - ``restart_retries`` can no longer be specified when ``restart_policy``
          is not specified (https://github.com/ansible-collections/community.docker/pull/422).
        - docker_container - ``stop_timeout`` is no longer ignored for idempotency
          if told to be not ignored in ``comparisons``. So far it defaulted to ``ignore``
          there, and setting it to ``strict`` had no effect (https://github.com/ansible-collections/community.docker/pull/422).
      major_changes:
        - docker_container - no longer uses the Docker SDK for Python. It requires
          ``requests`` to be installed, and depending on the features used has some
          more requirements. If the Docker SDK for Python is installed, these requirements
          are likely met (https://github.com/ansible-collections/community.docker/pull/422).
        - docker_container - the module was completely rewritten from scratch (https://github.com/ansible-collections/community.docker/pull/422).
        - docker_plugin - no longer uses the Docker SDK for Python. It requires ``requests``
          to be installed, and depending on the features used has some more requirements.
          If the Docker SDK for Python is installed, these requirements are likely
          met (https://github.com/ansible-collections/community.docker/pull/429).
      minor_changes:
        - docker_container - add a new parameter ``image_comparison`` to control the
          behavior for which image will be used for idempotency checks (https://github.com/ansible-collections/community.docker/issues/421,
          https://github.com/ansible-collections/community.docker/pull/428).
        - docker_container - add support for ``cgroupns_mode`` (https://github.com/ansible-collections/community.docker/issues/338,
          https://github.com/ansible-collections/community.docker/pull/427).
        - docker_container - allow to specify ``platform`` (https://github.com/ansible-collections/community.docker/issues/123,
          https://github.com/ansible-collections/community.docker/pull/426).
      release_summary: 'Second alpha prerelease of community.docker 3.0.0. This version
        again has several breaking changes

        and features rewrites of several modules to directly use the API using ``requests``,
        instead of using

        the Docker SDK for Python.


        The largest change to the previous 3.0.0-a1 prerelease is that ``docker_container``
        module has been

        rewritten. It now also no longer needs the Docker SDK for Python, which allowed
        to implement some new

        features that were not available before (``platform`` and ``cgroupns_mode``
        parameters).

        '
    fragments:
      - 3.0.0-a2.yml
      - 426-docker_container-platform.yml
      - 427-docker_container-cgroupns_mode.yml
      - 428-docker_container-image-ignore.yml
      - 429-docker_plugin.yml
      - docker_container.yml
    release_date: '2022-07-15'
  3.0.0-a3:
    changes:
      minor_changes:
        - All software licenses are now in the ``LICENSES/`` directory of the collection
          root. Moreover, ``SPDX-License-Identifier:`` is used to declare the applicable
          license for every file that is not automatically generated (https://github.com/ansible-collections/community.docker/pull/430).
      release_summary: No content changes except some license declaration adjustments.
        This is mainly a trial run to see whether this is causing unexpected problems.
    fragments:
      - 3.0.0-a3.yml
      - 430-licenses.yml
    release_date: '2022-07-23'
  3.0.0-rc1:
    changes:
      bugfixes:
        - modules and plugins communicating directly with the Docker daemon - prevent
          crash when TLS is used (https://github.com/ansible-collections/community.docker/pull/432).
      release_summary: First release candidate for community.docker 3.0.0. As long
        as more bugs are found new release candidates will be released.
    fragments:
      - 3.0.0-rc1.yml
      - 432-tls.yml
    release_date: '2022-07-26'
  3.0.0-rc2:
    changes:
      breaking_changes:
        - modules and plugins communicating directly with the Docker daemon - when
          connecting by SSH and not using ``use_ssh_client=true``, reject unknown
          host keys instead of accepting them. This is only a breaking change relative
          to older community.docker 3.0.0 pre-releases or with respect to Docker SDK
          for Python < 6.0.0. Docker SDK for Python 6.0.0 will also include this change
          (https://github.com/ansible-collections/community.docker/pull/434).
      bugfixes:
        - docker_image - when composing the build context, trim trailing whitespace
          from ``.dockerignore`` entries. This is only a change relative to older
          community.docker 3.0.0 pre-releases or with respect to Docker SDK for Python
          < 6.0.0. Docker SDK for Python 6.0.0 will also include this change (https://github.com/ansible-collections/community.docker/pull/434).
        - modules and plugins communicating directly with the Docker daemon - do not
          create a subshell for SSH connections when using ``use_ssh_client=true``.
          This is only a change relative to older community.docker 3.0.0 pre-releases
          or with respect to Docker SDK for Python < 6.0.0. Docker SDK for Python
          6.0.0 will also include this change (https://github.com/ansible-collections/community.docker/pull/434).
        - modules and plugins communicating directly with the Docker daemon - fix
          ``ProxyCommand`` handling for SSH connections when not using ``use_ssh_client=true``.
          This is only a change relative to older community.docker 3.0.0 pre-releases
          or with respect to Docker SDK for Python < 6.0.0. Docker SDK for Python
          6.0.0 will also include this change (https://github.com/ansible-collections/community.docker/pull/434).
        - modules and plugins communicating directly with the Docker daemon - fix
          parsing of IPv6 addresses with a port in ``docker_host``. This is only a
          change relative to older community.docker 3.0.0 pre-releases or with respect
          to Docker SDK for Python < 6.0.0. Docker SDK for Python 6.0.0 will also
          include this change (https://github.com/ansible-collections/community.docker/pull/434).
      minor_changes:
        - modules and plugins communicating directly with the Docker daemon - improve
          default TLS version selection for Python 3.6 and newer. This is only a change
          relative to older community.docker 3.0.0 pre-releases or with respect to
          Docker SDK for Python < 6.0.0. Docker SDK for Python 6.0.0 will also include
          this change (https://github.com/ansible-collections/community.docker/pull/434).
      release_summary: Second release candidate for community.docker 3.0.0. As long
        as more bugs are found new release candidates will be released.
      security_fixes:
        - modules and plugins communicating directly with the Docker daemon - when
          connecting by SSH and not using ``use_ssh_client=true``, reject unknown
          host keys instead of accepting them. This is only a change relative to older
          community.docker 3.0.0 pre-releases or with respect to Docker SDK for Python
          < 6.0.0. Docker SDK for Python 6.0.0 will also include this change (https://github.com/ansible-collections/community.docker/pull/434).
    fragments:
      - 3.0.0-rc2.yml
      - docker-py-changes-1.yml
    release_date: '2022-07-31'
  3.0.0:
    changes:
      bugfixes:
        - docker_plugin - fix crash when handling plugin options (https://github.com/ansible-collections/community.docker/issues/446,
          https://github.com/ansible-collections/community.docker/pull/447).
        - docker_stack - fix broken string formatting when reporting error in case
          ``compose`` was containing invalid values (https://github.com/ansible-collections/community.docker/pull/448).
      minor_changes:
        - modules and plugins communicating directly with the Docker daemon - simplify
          use of helper function that was removed in Docker SDK for Python to find
          executables (https://github.com/ansible-collections/community.docker/pull/438).
      release_summary: The 3.0.0 release features a rewrite of the ``docker_container``
        module, and many modules and plugins no longer depend on the Docker SDK for
        Python.
    fragments:
      - 3.0.0.yml
      - 438-docker-py.yml
      - 447-docker_plugin-bug.yml
      - 448-docker_stack-error.yml
    release_date: '2022-08-12'
  3.0.1:
    changes:
      bugfixes:
        - docker_container - fix handling of ``env_file`` (https://github.com/ansible-collections/community.docker/issues/451,
          https://github.com/ansible-collections/community.docker/pull/452).
      release_summary: Bugfix release.
    fragments:
      - 3.0.1.yml
      - 452-docker_container-env_file.yml
    release_date: '2022-08-15'
  3.0.2:
    changes:
      bugfixes:
        - docker_image - fix build argument handling (https://github.com/ansible-collections/community.docker/issues/455,
          https://github.com/ansible-collections/community.docker/pull/456).
      release_summary: Bugfix release.
    fragments:
      - 3.0.2.yml
      - 456-docker_image-build-args.yml
    release_date: '2022-08-16'
  3.1.0:
    changes:
      minor_changes:
        - The collection repository conforms to the `REUSE specification <https://reuse.software/spec/>`__
          except for the changelog fragments (https://github.com/ansible-collections/community.docker/pull/462).
        - docker_swarm - allows usage of the ``data_path_port`` parameter when initializing
          a swarm (https://github.com/ansible-collections/community.docker/issues/296).
      release_summary: Feature release.
    fragments:
      - 3.1.0.yml
      - 466-add-data-path-port.yml
      - licenses.yml
    release_date: '2022-09-08'
  3.2.0:
    changes:
      deprecated_features:
        - 'docker_container - the ``ignore_image`` option is deprecated and will be
          removed in community.docker 4.0.0. Use ``image: ignore`` in ``comparisons``
          instead (https://github.com/ansible-collections/community.docker/pull/487).'
        - 'docker_container - the ``purge_networks`` option is deprecated and will
          be removed in community.docker 4.0.0. Use ``networks: strict`` in ``comparisons``
          instead, and make sure to provide ``networks``, with value ``[]`` if all
          networks should be removed (https://github.com/ansible-collections/community.docker/pull/487).'
      minor_changes:
        - docker_container - added ``image_name_mismatch`` option which allows to
          control the behavior if the container uses the image specified, but the
          container's configuration uses a different name for the image than the one
          provided to the module (https://github.com/ansible-collections/community.docker/issues/485,
          https://github.com/ansible-collections/community.docker/pull/488).
      release_summary: Feature and deprecation release.
    fragments:
      - 3.2.0.yml
      - 487-docker_container-deprecate.yml
      - 488-docker_container-image-name.yml
    release_date: '2022-11-01'
  3.2.1:
    changes:
      release_summary: Maintenance release with improved documentation.
    fragments:
      - 3.2.1.yml
    release_date: '2022-11-06'
  3.2.2:
    changes:
      bugfixes:
        - docker_container - the ``kill_signal`` option erroneously did not accept
          strings anymore since 3.0.0 (https://github.com/ansible-collections/community.docker/issues/505,
          https://github.com/ansible-collections/community.docker/pull/506).
      release_summary: Bugfix release.
    fragments:
      - 3.2.2.yml
      - 506-docker_container-kill_signal.yml
    release_date: '2022-11-28'
  3.3.0:
    changes:
      bugfixes:
        - docker_container_exec - fix ``chdir`` option which was ignored since community.docker
          3.0.0 (https://github.com/ansible-collections/community.docker/issues/517,
          https://github.com/ansible-collections/community.docker/pull/518).
        - vendored latest Docker SDK for Python bugfix (https://github.com/ansible-collections/community.docker/pull/513,
          https://github.com/docker/docker-py/issues/3045).
      minor_changes:
        - current_container_facts - make work with current Docker version, also support
          Podman (https://github.com/ansible-collections/community.docker/pull/510).
        - docker_image - when using ``archive_path``, detect whether changes are necessary
          based on the image ID (hash). If the existing tar archive matches the source,
          do nothing. Previously, each task execution re-created the archive (https://github.com/ansible-collections/community.docker/pull/500).
      release_summary: Feature and bugfix release.
    fragments:
      - 3.3.0.yml
      - 500-idempotent-image-archival.yaml
      - 510-current_container_facts.yml
      - 513-api-npipe.yml
      - 518-docker_container_exec-workdir.yml
    release_date: '2022-12-03'
  3.3.1:
    changes:
      bugfixes:
        - current_container_facts - make container detection work better in more cases
          (https://github.com/ansible-collections/community.docker/pull/522).
      release_summary: Bugfix release.
    fragments:
      - 3.3.1.yml
      - 522-current-image.yml
    release_date: '2022-12-06'
  3.3.2:
    changes:
      bugfixes:
        - docker_container - when ``detach=false``, wait indefinitely and not at most
          one minute. This was the behavior with Docker SDK for Python, and was accidentally
          changed in 3.0.0 (https://github.com/ansible-collections/community.docker/issues/526,
          https://github.com/ansible-collections/community.docker/pull/527).
      release_summary: Bugfix release.
    fragments:
      - 3.3.2.yml
      - 527-container-wait.yml
    release_date: '2022-12-09'
  3.4.0:
    changes:
      bugfixes:
        - docker_api connection plugin - fix error handling when 409 Conflict is returned
          by the Docker daemon in case of a stopped container (https://github.com/ansible-collections/community.docker/pull/546).
        - docker_container_exec - fix error handling when 409 Conflict is returned
          by the Docker daemon in case of a stopped container (https://github.com/ansible-collections/community.docker/pull/546).
        - docker_plugin - do not crash if plugin is installed in check mode (https://github.com/ansible-collections/community.docker/issues/552,
          https://github.com/ansible-collections/community.docker/pull/553).
        - most modules - fix handling of ``DOCKER_TIMEOUT`` environment variable,
          and improve handling of other fallback environment variables (https://github.com/ansible-collections/community.docker/issues/551,
          https://github.com/ansible-collections/community.docker/pull/554).
      minor_changes:
        - docker_api connection plugin - when copying files to/from a container, stream
          the file contents instead of first reading them to memory (https://github.com/ansible-collections/community.docker/pull/545).
        - docker_host_info - allow to list all containers with new option ``containers_all``
          (https://github.com/ansible-collections/community.docker/issues/535, https://github.com/ansible-collections/community.docker/pull/538).
      release_summary: Regular bugfix and feature release.
    fragments:
      - 3.4.0.yml
      - 538-docker_host_info-all-containers.yml
      - 545-docker_api.yml
      - 546-conflict-error.yml
      - 553-docker_plugin-check-mode.yml
      - 554-env-vars.yml
    modules:
      - description: Copy a file into a Docker container
        name: docker_container_copy_into
        namespace: ''
    release_date: '2023-01-14'
  3.4.1:
    changes:
      bugfixes:
        - docker_api connection plugin, docker_container_exec, docker_container_copy_into
          - properly close socket to Daemon after executing commands in containers
          (https://github.com/ansible-collections/community.docker/pull/582).
        - docker_container - fix ``tmfs_size`` and ``tmpfs_mode`` not being set (https://github.com/ansible-collections/community.docker/pull/580).
        - various plugins and modules - remove unnecessary imports (https://github.com/ansible-collections/community.docker/pull/574).
      release_summary: Regular bugfix release.
    fragments:
      - 3.4.1.yml
      - 582-stream-close.yml
      - fix-tmpfs_size-and-tmpfs_mode.yml
      - remove-unneeded-imports.yml
    release_date: '2023-02-20'
  3.4.2:
    changes:
      bugfixes:
        - docker_prune - return correct value for ``changed``. So far the module always
          claimed that nothing changed (https://github.com/ansible-collections/community.docker/pull/593).
      release_summary: Bugfix release.
    fragments:
      - 3.4.2.yml
      - 593-docker_prune-changed.yml
    release_date: '2023-02-25'
  3.4.3:
    changes:
      release_summary: Maintenance release with improved documentation.
    fragments:
      - 3.4.3.yml
    release_date: '2023-03-24'
  3.4.4:
    changes:
      known_issues:
        - The modules and plugins using the vendored code from Docker SDK for Python
          currently do not work with requests 2.29.0 and/or urllib3 2.0.0. The same
          is currently true for the latest version of Docker SDK for Python itself
          (https://github.com/ansible-collections/community.docker/issues/611, https://github.com/ansible-collections/community.docker/pull/612).
      minor_changes:
        - Restrict requests to versions before 2.29.0, and urllib3 to versions before
          2.0.0. This is necessary until the vendored code from Docker SDK for Python
          has been fully adjusted to work with a feature of urllib3 that is used since
          requests 2.29.0 (https://github.com/ansible-collections/community.docker/issues/611,
          https://github.com/ansible-collections/community.docker/pull/612).
      release_summary: Maintenance release with updated EE requirements and updated
        documentation.
    fragments:
      - 3.4.4.yml
      - 612-requests-2.29.0.yml
    release_date: '2023-05-01'
  3.4.5:
    changes:
      bugfixes:
        - Make vendored Docker SDK for Python code compatible with requests 2.29.0
          and urllib3 2.0 (https://github.com/ansible-collections/community.docker/pull/613).
      release_summary: Maintenance release which adds compatibility with requests
        2.29.0 and 2.30.0 and urllib3 2.0.
    fragments:
      - 3.4.5.yml
      - 613-requests.yml
    release_date: '2023-05-05'
  3.4.6:
    changes:
      bugfixes:
        - socket_handler module utils - make sure this fully works when Docker SDK
          for Python is not available (https://github.com/ansible-collections/community.docker/pull/620).
        - vendored Docker SDK for Python code - fix for errors on pipe close in Windows
          (https://github.com/ansible-collections/community.docker/pull/619).
        - vendored Docker SDK for Python code - respect timeouts on Windows named
          pipes (https://github.com/ansible-collections/community.docker/pull/619).
        - vendored Docker SDK for Python code - use ``poll()`` instead of ``select()``
          except on Windows (https://github.com/ansible-collections/community.docker/pull/619).
      known_issues:
        - docker_api connection plugin - does **not work with TCP TLS sockets**! This
          is caused by the inability to send an ``close_notify`` TLS alert without
          closing the connection with Python's ``SSLSocket`` (https://github.com/ansible-collections/community.docker/issues/605,
          https://github.com/ansible-collections/community.docker/pull/621).
        - docker_container_exec - does **not work with TCP TLS sockets** when the
          ``stdin`` option is used! This is caused by the inability to send an ``close_notify``
          TLS alert without closing the connection with Python's ``SSLSocket`` (https://github.com/ansible-collections/community.docker/issues/605,
          https://github.com/ansible-collections/community.docker/pull/621).
      release_summary: Bugfix release with documentation warnings about using certain
        functionality when connecting to the Docker daemon with TCP TLS.
    fragments:
      - 3.4.6.yml
      - 620-bugfixes.yml
      - docker-py.yml
      - tls-tcp-warn.yml
    release_date: '2023-05-20'
  3.4.7:
    changes:
      bugfixes:
        - docker_swarm_info - if ``service=true`` is used, do not crash when a service
          without an endpoint spec is encountered (https://github.com/ansible-collections/community.docker/issues/636,
          https://github.com/ansible-collections/community.docker/pull/637).
      release_summary: Bugfix release.
    fragments:
      - 3.4.7.yml
      - 637-swarm_info-endpoint_spec.yml
    release_date: '2023-06-15'
  3.4.8:
    changes:
      known_issues:
        - Ansible markup will show up in raw form on ansible-doc text output for ansible-core
          before 2.15. If you have trouble deciphering the documentation markup, please
          upgrade to ansible-core 2.15 (or newer), or read the HTML documentation
          on https://docs.ansible.com/ansible/devel/collections/community/docker/.
      release_summary: 'Maintenance release with updated documentation.


        From this version on, community.docker is using the new `Ansible semantic
        markup

        <https://docs.ansible.com/ansible/devel/dev_guide/developing_modules_documenting.html#semantic-markup-within-module-documentation>`__

        in its documentation. If you look at documentation with the ansible-doc CLI
        tool

        from ansible-core before 2.15, please note that it does not render the markup

        correctly. You should be still able to read it in most cases, but you need

        ansible-core 2.15 or later to see it as it is intended. Alternatively you
        can

        look at `the devel docsite <https://docs.ansible.com/ansible/devel/collections/community/docker/>`__

        for the rendered HTML version of the documentation of the latest release.

        '
    fragments:
      - 3.4.8.yml
    release_date: '2023-06-22'
  3.4.9:
    changes:
      bugfixes:
        - vendored Docker SDK for Python code - cherry-pick changes from the Docker
          SDK for Python code to align code. These changes should not affect the parts
          used by the collection's code (https://github.com/ansible-collections/community.docker/pull/694).
      release_summary: Maintenance release with updated documentation and vendored
        Docker SDK for Python code.
    fragments:
      - 3.4.9.yml
      - 694-docker-py.yml
    release_date: '2023-10-08'
  3.4.10:
    changes:
      bugfixes:
        - docker_swarm - make init and join operations work again with Docker SDK
          for Python before 4.0.0 (https://github.com/ansible-collections/community.docker/issues/695,
          https://github.com/ansible-collections/community.docker/pull/696).
      release_summary: Bugfix release.
    fragments:
      - 3.4.10.yml
      - 696-docker_swarm-data_addr_path.yml
    release_date: '2023-10-29'
  3.4.11:
    changes:
      bugfixes:
        - docker_volume - fix crash caused by accessing an empty dictionary. The ``has_different_config()``
          was raising an ``AttributeError`` because the ``self.existing_volume["Labels"]``
          dictionary was ``None`` (https://github.com/ansible-collections/community.docker/pull/702).
      release_summary: Bugfix release.
    fragments:
      - 3.4.11.yml
      - 702-docker-volume-label-none.yaml
    release_date: '2023-11-12'
  3.5.0:
    changes:
      bugfixes:
        - modules and plugins using the Docker SDK for Python - remove ``ssl_version``
          from the parameters passed to Docker SDK for Python 7.0.0+. Explicitly fail
          with a nicer error message if it was explicitly set in this case (https://github.com/ansible-collections/community.docker/pull/715).
        - modules and plugins using the Docker SDK for Python - remove ``tls_hostname``
          from the parameters passed to Docker SDK for Python 7.0.0+. Explicitly fail
          with a nicer error message if it was explicitly set in this case (https://github.com/ansible-collections/community.docker/pull/721).
        - vendored Docker SDK for Python - avoid passing on ``ssl_version`` and ``tls_hostname``
          if they were not provided by the user. Remove dead code. (https://github.com/ansible-collections/community.docker/pull/722).
      deprecated_features:
        - docker_container - the default ``ignore`` for the ``image_name_mismatch``
          parameter has been deprecated and will switch to ``recreate`` in community.docker
          4.0.0. A deprecation warning will be printed in situations where the default
          value is used and where a behavior would change once the default changes
          (https://github.com/ansible-collections/community.docker/pull/703).
      minor_changes:
        - docker_container - implement better ``platform`` string comparisons to improve
          idempotency (https://github.com/ansible-collections/community.docker/issues/654,
          https://github.com/ansible-collections/community.docker/pull/705).
        - docker_container - internal refactorings which allow comparisons to use
          more information like details of the current image or the Docker host config
          (https://github.com/ansible-collections/community.docker/pull/713).
      release_summary: Bugfix and feature release.
    fragments:
      - 3.5.0.yml
      - 703-docker_container-image_name_mismatch.yml
      - 705-docker_container-platform.yml
      - 713-docker_container-refactoring.yml
      - 715-docker-7.yml
      - 721-docker-7.yml
      - 722-tls.yml
    release_date: '2023-12-10'
  3.6.0-b1:
    changes:
      bugfixes:
        - Use ``unix:///var/run/docker.sock`` instead of the legacy ``unix://var/run/docker.sock``
          as default for ``docker_host`` (https://github.com/ansible-collections/community.docker/pull/736).
      minor_changes:
        - docker_image - allow to specify labels and ``/dev/shm`` size when building
          images (https://github.com/ansible-collections/community.docker/issues/726,
          https://github.com/ansible-collections/community.docker/pull/727).
        - docker_image - allow to specify memory size and swap memory size in other
          units than bytes (https://github.com/ansible-collections/community.docker/pull/727).
      release_summary: 'Prerelease of the upcoming 3.6.0 bugfix and feature release.


        The collection now includes a bunch of new ``docker_image_*`` modules that
        move features out of the

        rather complex ``docker_image`` module. These new modules are easier to use
        and can better declare whether

        they support check mode, diff mode, or none of them.


        This version also features modules that support the Docker CLI plugins ``buildx``
        and ``compose``.

        The ``docker_image_build`` module uses the ``docker buildx`` command under
        the hood, and the ``docker_compose_v2``

        module uses the ``docker compose`` command. Both these modules use the Docker
        CLI instead of directly talking

        to the API. The modules support mostly the same interface as the API based
        modules, so the main difference is that

        instead of some Python requirements, they depend on the Docker CLI tool ``docker``.

        '
    fragments:
      - 3.6.0-b1.yml
      - 727-docker_image-build.yml
      - host.yml
    modules:
      - description: Manage multi-container Docker applications with Docker Compose
          CLI plugin
        name: docker_compose_v2
        namespace: ''
      - description: Build Docker images using Docker buildx
        name: docker_image_build
        namespace: ''
      - description: Pull Docker images from registries
        name: docker_image_pull
        namespace: ''
      - description: Push Docker images to registries
        name: docker_image_push
        namespace: ''
      - description: Remove Docker images
        name: docker_image_remove
        namespace: ''
      - description: Tag Docker images with new names and/or tags
        name: docker_image_tag
        namespace: ''
    release_date: '2024-01-04'
  3.6.0-b2:
    changes:
      major_changes:
        - The ``community.docker`` collection now depends on the ``community.library_inventory_filtering_v1``
          collection. This utility collection provides host filtering functionality
          for inventory plugins. If you use the Ansible community package, both collections
          are included and you do not have to do anything special. If you install
          the collection with ``ansible-galaxy collection install``, it will be installed
          automatically. If you install the collection by copying the files of the
          collection to a place where ansible-core can find it, for example by cloning
          the git repository, you need to make sure that you also have to install
          the dependency if you are using the inventory plugins (https://github.com/ansible-collections/community.docker/pull/698).
      minor_changes:
        - The ``ca_cert`` option available to almost all modules and plugins has been
          renamed to ``ca_path``. The name ``ca_path`` is also used for similar options
          in ansible-core and other collections. The old name has been added as an
          alias and can still be used (https://github.com/ansible-collections/community.docker/pull/744).
        - The ``docker_stack*`` modules now use the common CLI-based module code added
          for the ``docker_image_build`` and ``docker_compose_v2`` modules. This means
          that the modules now have various more configuration options with respect
          to talking to the Docker Daemon, and now also are part of the ``community.docker.docker``
          and ``docker`` module default groups (https://github.com/ansible-collections/community.docker/pull/745).
        - inventory plugins - add ``filter`` option which allows to include and exclude
          hosts based on Jinja2 conditions (https://github.com/ansible-collections/community.docker/pull/698,
          https://github.com/ansible-collections/community.docker/issues/610).
      release_summary: 'Second prerelease of the upcoming 3.6.0 bugfix and feature
        release.


        The collection now includes a bunch of new ``docker_image_*`` modules that
        move features out of the

        rather complex ``docker_image`` module. These new modules are easier to use
        and can better declare whether

        they support check mode, diff mode, or none of them.


        This version also features modules that support the Docker CLI plugins ``buildx``
        and ``compose``.

        The ``docker_image_build`` module uses the ``docker buildx`` command under
        the hood, and the ``docker_compose_v2``

        and ``docker_compose_v2_pull`` modules uses the ``docker compose`` command.
        All these modules use the Docker CLI

        instead of directly talking to the API. The modules support mostly the same
        interface as the API based modules,

        so the main difference is that instead of some Python requirements, they depend
        on the Docker CLI tool ``docker``.


        Other changes to the collection since the last prerelease:


        * docker_compose_v2 allows to specify the pull policy

        '
    fragments:
      - 3.6.0-b2.yml
      - 698-filter.yml
      - 744-ca_path.yml
      - 745-docker_stack.yml
    modules:
      - description: Pull a Docker compose project
        name: docker_compose_v2_pull
        namespace: ''
    release_date: '2024-01-14'
  3.6.0-rc1:
    changes:
      release_summary: 'First release candidate of the latest bugfix and feature release.

        No more features will be added before the final release, which will likely
        happen on Sunday or Monday.


        The collection now includes a bunch of new ``docker_image_*`` modules that
        move features out of the

        rather complex ``docker_image`` module. These new modules are easier to use
        and can better declare whether

        they support check mode, diff mode, or none of them.


        This version also features modules that support the Docker CLI plugins ``buildx``
        and ``compose``.

        The ``docker_image_build`` module uses the ``docker buildx`` command under
        the hood, and the ``docker_compose_v2``

        and ``docker_compose_v2_pull`` modules uses the ``docker compose`` command.
        All these modules use the Docker CLI

        instead of directly talking to the API. The modules support mostly the same
        interface as the API based modules,

        so the main difference is that instead of some Python requirements, they depend
        on the Docker CLI tool ``docker``.


        Changes since the last beta:

        * The ``docker_compose_v2*`` modules also checks for ``compose.yaml`` and
        ``compose.yml``, not only for ``docker-compose.yaml`` and ``docker-compose.yml``.

        * You can now specify ``services`` in the ``docker_compose_v2`` module.

        * You can now specify ``build`` in the ``docker_compose_v2`` module (allows
        to pass ``--build`` or ``--no-build`` depending on its value).

        '
    fragments:
      - 3.6.0-rc1.yml
    release_date: '2024-01-18'
  3.6.0:
    changes:
      bugfixes:
        - docker_image - fix archiving idempotency with Docker API 1.44 or later (https://github.com/ansible-collections/community.docker/pull/765).
      minor_changes:
        - docker_container - add ``networks[].mac_address`` option for Docker API
          1.44+. Note that Docker API 1.44 no longer uses the global ``mac_address``
          option, this new option is the only way to set the MAC address for a container
          (https://github.com/ansible-collections/community.docker/pull/763).
      release_summary: 'Bugfix and feature release.


        The collection now includes a bunch of new ``docker_image_*`` modules that
        move features out of the

        rather complex ``docker_image`` module. These new modules are easier to use
        and can better declare whether

        they support check mode, diff mode, or none of them.


        This version also features modules that support the Docker CLI plugins ``buildx``
        and ``compose``.

        The ``docker_image_build`` module uses the ``docker buildx`` command under
        the hood, and the ``docker_compose_v2``

        and ``docker_compose_v2_pull`` modules uses the ``docker compose`` command.
        All these modules use the Docker CLI

        instead of directly talking to the API. The modules support mostly the same
        interface as the API based modules,

        so the main difference is that instead of some Python requirements, they depend
        on the Docker CLI tool ``docker``.

        '
    fragments:
      - 3.6.0.yml
      - 763-docker_container-mac_address.yml
      - 765-docker_image-archive.yml
    release_date: '2024-01-21'
  3.7.0:
    changes:
      bugfixes:
        - docker_compose_v2 - properly parse dry-run build events from ``stderr``
          (https://github.com/ansible-collections/community.docker/issues/778, https://github.com/ansible-collections/community.docker/pull/779).
        - docker_compose_v2_pull - the module was documented as part of the ``community.docker.docker``
          action group, but was not actually part of it. That has now been fixed (https://github.com/ansible-collections/community.docker/pull/773).
      minor_changes:
        - docker_compose_v2 - add ``scale`` option to allow to explicitly scale services
          (https://github.com/ansible-collections/community.docker/pull/776).
        - docker_compose_v2, docker_compose_v2_pull - support ``files`` parameter
          to specify multiple Compose files (https://github.com/ansible-collections/community.docker/issues/772,
          https://github.com/ansible-collections/community.docker/pull/775).
      release_summary: Bugfix and feature release.
    fragments:
      - 3.7.0.yml
      - 773-docker_compose_v2_pull-action-group.yml
      - 775-docker_compose-files.yml
      - 776-docker_compose-scale.yml
      - 779-compose-v2-build.yml
    modules:
      - description: Export (archive) Docker images
        name: docker_image_export
        namespace: ''
    release_date: '2024-01-27'
  3.8.0:
    changes:
      bugfixes:
        - docker_compose_v2 - do not consider a ``Waiting`` event as an action/change
          (https://github.com/ansible-collections/community.docker/pull/804).
        - docker_compose_v2 - do not treat service-level pull events as changes to
          avoid incorrect ``changed=true`` return value of ``pull=always`` (https://github.com/ansible-collections/community.docker/issues/802,
          https://github.com/ansible-collections/community.docker/pull/803).
        - docker_compose_v2, docker_compose_v2_pull - fix parsing of pull messages
          for Docker Compose 2.20.0 (https://github.com/ansible-collections/community.docker/issues/785,
          https://github.com/ansible-collections/community.docker/pull/786).
      minor_changes:
        - docker_compose_v2 - allow to wait until containers are running/health when
          running ``docker compose up`` with the new ``wait`` option (https://github.com/ansible-collections/community.docker/issues/794,
          https://github.com/ansible-collections/community.docker/pull/796).
        - docker_container - the ``pull_check_mode_behavior`` option now allows to
          control the module's behavior in check mode when ``pull=always`` (https://github.com/ansible-collections/community.docker/issues/792,
          https://github.com/ansible-collections/community.docker/pull/797).
        - docker_container - the ``pull`` option now accepts the three values ``never``,
          ``missing_image`` (default), and ``never``, next to the previously valid
          values ``true`` (equivalent to ``always``) and ``false`` (equivalent to
          ``missing_image``). This allows the equivalent to ``--pull=never`` from
          the Docker command line (https://github.com/ansible-collections/community.docker/issues/783,
          https://github.com/ansible-collections/community.docker/pull/797).
      release_summary: Bugfix and feature release.
    fragments:
      - 3.8.0.yml
      - 786-docker_v2.yml
      - 796-docker_compose_v2-wait.yml
      - 797-docker_container-pull.yml
      - 803-compose-v2-pull.yml
      - 804-compose-v2-waiting.yml
    release_date: '2024-02-25'
  3.8.1:
    changes:
      bugfixes:
        - docker_compose_v2 - do not fail when non-fatal errors occur. This can happen
          when pulling an image fails, but then the image can be built for another
          service. Docker Compose emits an error in that case, but ``docker compose
          up`` still completes successfully (https://github.com/ansible-collections/community.docker/issues/807,
          https://github.com/ansible-collections/community.docker/pull/810, https://github.com/ansible-collections/community.docker/pull/811).
        - docker_compose_v2* modules - correctly parse ``Warning`` events emitted
          by Docker Compose (https://github.com/ansible-collections/community.docker/issues/807,
          https://github.com/ansible-collections/community.docker/pull/811).
        - docker_compose_v2* modules - parse ``logfmt`` warnings emitted by Docker
          Compose (https://github.com/ansible-collections/community.docker/issues/787,
          https://github.com/ansible-collections/community.docker/pull/811).
        - docker_compose_v2_pull - fixing idempotence by checking actual pull progress
          events instead of service-level pull request when ``policy=always``. This
          stops the module from reporting ``changed=true`` if no actual change happened
          when pulling. In check mode, it has to assume that a change happens though
          (https://github.com/ansible-collections/community.docker/issues/813, https://github.com/ansible-collections/community.docker/pull/814).
      release_summary: Bugfix release
      security_fixes:
        - docker_containers, docker_machine, and docker_swarm inventory plugins -
          make sure all data received from the Docker daemon / Docker machine is marked
          as unsafe, so remote code execution by obtaining texts that can be evaluated
          as templates is not possible (https://www.die-welt.net/2024/03/remote-code-execution-in-ansible-dynamic-inventory-plugins/,
          https://github.com/ansible-collections/community.docker/pull/815).
    fragments:
      - 3.8.1.yml
      - 810-compose-errors.yml
      - 811-compose-v2-logfmt.yml
      - 814-docker_compose_v2_pull-idem.yml
      - inventory-rce.yml
    release_date: '2024-03-16'
  3.9.0:
    changes:
      bugfixes:
        - docker_compose_v2* - allow ``project_src`` to be a relative path, by converting
          it to an absolute path before using it (https://github.com/ansible-collections/community.docker/issues/827,
          https://github.com/ansible-collections/community.docker/pull/828).
        - docker_compose_v2* modules - abort with a nice error message instead of
          crash when the Docker Compose CLI plugin version is ``dev`` (https://github.com/ansible-collections/community.docker/issues/825,
          https://github.com/ansible-collections/community.docker/pull/826).
        - inventory plugins - add unsafe wrapper to avoid marking strings that do
          not contain ``{`` or ``}`` as unsafe, to work around a bug in AWX (https://github.com/ansible-collections/community.docker/pull/835).
      minor_changes:
        - The EE requirements now include PyYAML, since the ``docker_compose_v2*``
          modules depend on it when the ``definition`` option is used. This should
          not have a noticable effect on generated EEs since ansible-core itself depends
          on PyYAML as well, and ansible-builder explicitly ignores this dependency
          (https://github.com/ansible-collections/community.docker/pull/832).
        - docker_compose_v2* - the new option ``check_files_existing`` allows to disable
          the check for one of the files ``compose.yaml``, ``compose.yml``, ``docker-compose.yaml``,
          and ``docker-compose.yml`` in ``project_src`` if ``files`` is not specified.
          This is necessary if a non-standard compose filename is specified through
          other means, like the ``COMPOSE_FILE`` environment variable (https://github.com/ansible-collections/community.docker/issues/838,
          https://github.com/ansible-collections/community.docker/pull/839).
        - docker_compose_v2* modules - allow to provide an inline definition of the
          compose content instead of having to provide a ``project_src`` directory
          with the compose file written into it (https://github.com/ansible-collections/community.docker/issues/829,
          https://github.com/ansible-collections/community.docker/pull/832).
        - vendored Docker SDK for Python - remove unused code that relies on functionality
          deprecated in Python 3.12 (https://github.com/ansible-collections/community.docker/pull/834).
      release_summary: Bugfix and feature release.
    fragments:
      - 3.9.0.yml
      - 826-docker-compose-v2-version.yml
      - 828-compose-project_src.yml
      - 832-docker_compose_v2-definition.yml
      - 834-datetime-depr.yml
      - 835-unsafe.yml
      - 839-compose_v2-check-file.yml
    release_date: '2024-04-21'
  3.10.0:
    changes:
      deprecated_features:
        - docker_compose - the Docker Compose v1 module is deprecated and will be
          removed from community.docker 4.0.0. Please migrate to the ``community.docker.docker_compose_v2``
          module, which works with Docker Compose v2 (https://github.com/ansible-collections/community.docker/issues/823,
          https://github.com/ansible-collections/community.docker/pull/833).
        - various modules and plugins - the ``ssl_version`` option has been deprecated
          and will be removed from community.docker 4.0.0. It has already been removed
          from Docker SDK for Python 7.0.0, and was only necessary in the past to
          work around SSL/TLS issues (https://github.com/ansible-collections/community.docker/pull/853).
      minor_changes:
        - docker_container - adds ``healthcheck.start_interval`` to support healthcheck
          start interval setting on containers (https://github.com/ansible-collections/community.docker/pull/848).
        - docker_container - adds ``healthcheck.test_cli_compatible`` to allow omit
          test option on containers without remove existing image test (https://github.com/ansible-collections/community.docker/pull/847).
        - docker_image_build - add ``outputs`` option to allow configuring outputs
          for the build (https://github.com/ansible-collections/community.docker/pull/852).
        - docker_image_build - add ``secrets`` option to allow passing secrets to
          the build (https://github.com/ansible-collections/community.docker/pull/852).
        - docker_image_build - allow ``platform`` to be a list of platforms instead
          of only a single platform for multi-platform builds (https://github.com/ansible-collections/community.docker/pull/852).
        - docker_network - adds ``config_only`` and ``config_from`` to support creating
          and using config only networks (https://github.com/ansible-collections/community.docker/issues/395).
        - docker_prune - add new options ``builder_cache_all``, ``builder_cache_filters``,
          and ``builder_cache_keep_storage``, and a new return value ``builder_cache_caches_deleted``
          for pruning build caches (https://github.com/ansible-collections/community.docker/issues/844,
          https://github.com/ansible-collections/community.docker/issues/845).
        - docker_swarm_service - adds ``sysctls`` to support sysctl settings on swarm
          services (https://github.com/ansible-collections/community.docker/issues/190).
      release_summary: Feature release.
    fragments:
      - 3.10.0.yml
      - 836-docker_swarm_service-sysctls.yml
      - 843-docker_network-config-from-config-only.yml
      - 845-docker_prune.yml
      - 847-docker_container-heackcheck-test_cli_compatible.yml
      - 848-docker_api-healthcheck-start-interval.yml
      - 852-docker_image_build.yml
      - 853-ssl_version.yml
      - deprecate-compose-v1.yml
    release_date: '2024-05-19'
  3.10.1:
    changes:
      bugfixes:
        - vendored Docker SDK for Python - include a hotfix for requests 2.32.0 compatibility
          (https://github.com/ansible-collections/community.docker/issues/860, https://github.com/docker/docker-py/issues/3256,
          https://github.com/ansible-collections/community.docker/pull/861).
      known_issues:
        - 'Please note that the fix for requests 2.32.0 included in community.docker
          3.10.1 only

          fixes problems with the *vendored* Docker SDK for Python code. Modules and
          plugins that

          use Docker SDK for Python can still fail due to the SDK currently being
          incompatible

          with requests 2.32.0.


          If you still experience problems with requests 2.32.0, such as error messages
          like

          ``Not supported URL scheme http+docker``, please restrict requests to ``<2.32.0``.

          '
      release_summary: 'Hotfix release for requests 2.32.0 compatibility.

        '
    fragments:
      - 3.10.1.yml
      - 862-requests.yml
    release_date: '2024-05-20'
  3.10.2:
    changes:
      bugfixes:
        - vendored Docker SDK for Python - include a fix requests 2.32.2+ compatibility
          (https://github.com/ansible-collections/community.docker/issues/860, https://github.com/psf/requests/issues/6707,
          https://github.com/ansible-collections/community.docker/pull/864).
      release_summary: Bugfix release.
    fragments:
      - 3.10.2.yml
      - 864-requests.yml
    release_date: '2024-05-21'
  3.10.3:
    changes:
      bugfixes:
        - docker and nsenter connection plugins, docker_container_exec module - avoid
          using the deprecated ``ansible.module_utils.compat.selectors`` module util
          with Python 3 (https://github.com/ansible-collections/community.docker/issues/870,
          https://github.com/ansible-collections/community.docker/pull/871).
      release_summary: Bugfix release.
    fragments:
      - 3.10.3.yml
      - 871-selectors.yml
    release_date: '2024-05-26'
  3.10.4:
    changes:
      bugfixes:
        - docker_compose - make sure that the module uses the ``api_version`` parameter
          (https://github.com/ansible-collections/community.docker/pull/881).
        - docker_compose_v2* modules - there was no check to make sure that one of
          ``project_src`` and ``definition`` is provided. The modules crashed if none
          were provided (https://github.com/ansible-collections/community.docker/issues/885,
          https://github.com/ansible-collections/community.docker/pull/886).
      release_summary: Bugfix release.
    fragments:
      - 3.10.4.yml
      - 881-docker-compose-v1-api-version.yml
      - 886-compose-v2-req.yml
    release_date: '2024-06-16'
  3.11.0:
    changes:
      bugfixes:
        - docker_compose_v2* modules - fix parsing of skipped pull messages for Docker
          Compose 2.28.x (https://github.com/ansible-collections/community.docker/issues/911,
          https://github.com/ansible-collections/community.docker/pull/916).
        - docker_compose_v2*, docker_stack*, docker_image_build modules - using ``cli_context``
          no longer leads to an invalid parameter combination being passed to the
          corresponding Docker CLI tool, unless ``docker_host`` is also provided.
          Combining ``cli_context`` and ``docker_host`` is no longer allowed (https://github.com/ansible-collections/community.docker/issues/892,
          https://github.com/ansible-collections/community.docker/pull/895).
        - docker_container - fix possible infinite loop if ``removal_wait_timeout``
          is set (https://github.com/ansible-collections/community.docker/pull/922).
        - vendored Docker SDK for Python - use ``LooseVersion`` instead of ``StrictVersion``
          to compare urllib3 versions. This is needed for development versions (https://github.com/ansible-collections/community.docker/pull/902).
      minor_changes:
        - docker_container - add support for ``device_cgroup_rules`` (https://github.com/ansible-collections/community.docker/pull/910).
        - docker_container - the new ``state=healthy`` allows to wait for a container
          to become healthy on startup. The ``healthy_wait_timeout`` option allows
          to configure the maximum time to wait for this to happen (https://github.com/ansible-collections/community.docker/issues/890,
          https://github.com/ansible-collections/community.docker/pull/921).
    fragments:
      - 895-docker-cli.yml
      - 902-loose-version.yml
      - 910-docker_container-device_cgroup_rules.yml
      - 916-compose-v2-parse.yml
      - 921-docker_container-healthy.yml
      - 922-docker_container-wait-fix.yml
    release_date: '2024-07-09'
  3.12.0:
    changes:
      bugfixes:
        - docker_compose_v2 - handle yet another random unstructured error output
          from pre-2.29.0 Compose versions (https://github.com/ansible-collections/community.docker/issues/948,
          https://github.com/ansible-collections/community.docker/pull/949).
        - docker_compose_v2 - make sure that services provided in ``services`` are
          appended to the command line after ``--`` and not before it (https://github.com/ansible-collections/community.docker/pull/942).
        - docker_compose_v2* modules, docker_image_build - provide better error message
          when required fields are not present in ``docker version`` or ``docker info``
          output. This can happen if Podman is used instead of Docker (https://github.com/ansible-collections/community.docker/issues/891,
          https://github.com/ansible-collections/community.docker/pull/935).
        - docker_container - fix idempotency if ``network_mode=default`` and Docker
          26.1.0 or later is used. There was a breaking change in Docker 26.1.0 regarding
          normalization of ``NetworkMode`` (https://github.com/ansible-collections/community.docker/issues/934,
          https://github.com/ansible-collections/community.docker/pull/936).
        - docker_container - restore behavior of the module from community.docker
          2.x.y that passes the first network to the Docker Deamon while creating
          the container (https://github.com/ansible-collections/community.docker/pull/933).
        - docker_image_build - fix ``--output`` parameter composition for ``type=docker``
          and ``type=image`` (https://github.com/ansible-collections/community.docker/issues/946,
          https://github.com/ansible-collections/community.docker/pull/947).
      known_issues:
        - docker_container - when specifying a MAC address for a container's network,
          and the network is attached after container creation (for example, due to
          idempotency checks), the MAC address is at least in some cases ignored by
          the Docker Daemon (https://github.com/ansible-collections/community.docker/pull/933).
      minor_changes:
        - docker, docker_api connection plugins - allow to determine the working directory
          when executing commands with the new ``working_dir`` option (https://github.com/ansible-collections/community.docker/pull/943).
        - docker, docker_api connection plugins - allow to execute commands with extended
          privileges with the new ``privileges`` option (https://github.com/ansible-collections/community.docker/pull/943).
        - docker, docker_api connection plugins - allow to pass extra environment
          variables when executing commands with the new ``extra_env`` option (https://github.com/ansible-collections/community.docker/issues/937,
          https://github.com/ansible-collections/community.docker/pull/940).
        - docker_compose_v2* modules - support Docker Compose 2.29.0's ``json`` progress
          writer to avoid having to parse text output (https://github.com/ansible-collections/community.docker/pull/931).
        - docker_compose_v2_pull - add new options ``ignore_buildable``, ``include_deps``,
          and ``services`` (https://github.com/ansible-collections/community.docker/issues/941,
          https://github.com/ansible-collections/community.docker/pull/942).
        - docker_container - when creating a container, directly pass all networks
          to connect to to the Docker Daemon for API version 1.44 and newer. This
          makes creation more efficient and works around a bug in Docker Daemon that
          does not use the specified MAC address in at least some cases, though only
          for creation (https://github.com/ansible-collections/community.docker/pull/933).
      release_summary: Bugfix and feature release.
    fragments:
      - 3.12.0.yml
      - 931-compose-2.29.0-json.yml
      - 933-docker_container-networks.yml
      - 935-cli-errors.yml
      - 936-network_mode-default.yml
      - 940-connection-env.yml
      - 942-compose-v2-pull.yml
      - 943-connection.yml
      - 947-docker_image_build.yml
      - 949-compose-error.yml
    release_date: '2024-08-07'
  3.12.1:
    changes:
      deprecated_features:
        - The collection deprecates support for all ansible-core versions that are
          currently End of Life, `according to the ansible-core support matrix <https://docs.ansible.com/ansible-core/devel/reference_appendices/release_and_maintenance.html#ansible-core-support-matrix>`__.
          This means that the next major release of the collection will no longer
          support ansible-core 2.11, ansible-core 2.12, ansible-core 2.13, and ansible-core
          2.14.
      release_summary: Maintenance release with updated documentation and changelog.
    fragments:
      - 0-readme.yml
      - 3.12.1.yml
      - deprecate-eol-ansible-core.yml
    release_date: '2024-08-13'
  3.12.2:
    changes:
      bugfixes:
        - docker_prune - fix handling of lists for the filter options (https://github.com/ansible-collections/community.docker/issues/961,
          https://github.com/ansible-collections/community.docker/pull/966).
      release_summary: Bugfix release.
    fragments:
      - 3.12.2.yml
      - 966-prune-filters.yml
    release_date: '2024-09-17'
  3.13.0:
    changes:
      release_summary: Feature release.
    fragments:
      - 3.13.0.yml
    modules:
      - description: Run command in a container of a Compose service.
        name: docker_compose_v2_exec
        namespace: ''
      - description: Run command in a new container of a Compose service.
        name: docker_compose_v2_run
        namespace: ''
    release_date: '2024-10-04'
  3.13.1:
    changes:
      bugfixes:
        - docker_compose_v2 - improve parsing of dry-run image build operations from
          JSON events (https://github.com/ansible-collections/community.docker/issues/975,
          https://github.com/ansible-collections/community.docker/pull/976).
      release_summary: Bugfix release.
    fragments:
      - 3.13.1.yml
      - 976-compose-v2.yml
    release_date: '2024-10-15'
  3.13.2:
    changes:
      bugfixes:
        - docker_compose_v2_run - make sure to sanitize ``labels`` before sending
          them to the Docker Daemon (https://github.com/ansible-collections/community.docker/pull/985).
        - docker_config - make sure to sanitize ``labels`` before sending them to
          the Docker Daemon (https://github.com/ansible-collections/community.docker/pull/985).
        - docker_network - make sure to sanitize ``labels`` before sending them to
          the Docker Daemon (https://github.com/ansible-collections/community.docker/pull/985).
        - docker_node - make sure to sanitize ``labels`` before sending them to the
          Docker Daemon (https://github.com/ansible-collections/community.docker/pull/985).
        - docker_secret - make sure to sanitize ``labels`` before sending them to
          the Docker Daemon (https://github.com/ansible-collections/community.docker/pull/985).
        - docker_swarm - make sure to sanitize ``labels`` before sending them to the
          Docker Daemon (https://github.com/ansible-collections/community.docker/pull/985).
        - docker_swarm_service - make sure to sanitize ``labels`` and ``container_labels``
          before sending them to the Docker Daemon (https://github.com/ansible-collections/community.docker/pull/985).
        - docker_volume - make sure to sanitize ``labels`` before sending them to
          the Docker Daemon (https://github.com/ansible-collections/community.docker/pull/985).
      release_summary: Bugfix release.
    fragments:
      - 3.13.2.yml
      - 985-label-sanitize.yml
    release_date: '2024-11-10'
  3.13.3:
    changes:
      bugfixes:
        - docker_compose_v2_exec, docker_compose_v2_run - fix missing ``--env`` flag
          while assembling env arguments (https://github.com/ansible-collections/community.docker/pull/992).
        - docker_host_info - ensure that the module always returns ``can_talk_to_docker``,
          and that it provides the correct value even if ``api_version`` is specified
          (https://github.com/ansible-collections/community.docker/issues/993, https://github.com/ansible-collections/community.docker/pull/995).
      release_summary: Bugfix release.
    fragments:
      - 3.13.3.yml
      - 992-module-docker_compose_v2_run-fix-env-argument.yml
      - 995-docker_host_info-return.yml
    release_date: '2024-11-23'
