---
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Registering container name
  ansible.builtin.set_fact:
    cname: "{{ cname_prefix ~ '-mounts' }}"
    cname_h1: "{{ cname_prefix ~ '-mounts-h1' }}"
    cname_h2: "{{ cname_prefix ~ '-mounts-h2' }}"
- name: Registering container name
  ansible.builtin.set_fact:
    cnames: "{{ cnames + [cname, cname_h1, cname_h2] }}"

####################################################################
## keep_volumes ####################################################
####################################################################

# TODO: - keep_volumes

####################################################################
## mounts ##########################################################
####################################################################

- name: mounts
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - source: /tmp
        target: /tmp
        type: bind
      - source: /
        target: /whatever
        type: bind
        read_only: false
  register: mounts_1

- name: mounts (idempotency)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - source: /
        target: /whatever
        type: bind
        read_only: false
      - source: /tmp
        target: /tmp
        type: bind
  register: mounts_2

- name: mounts (less mounts)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - source: /tmp
        target: /tmp
        type: bind
  register: mounts_3

- name: mounts (more mounts)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - source: /tmp
        target: /tmp
        type: bind
      - source: /tmp
        target: /somewhereelse
        type: bind
        read_only: true
    force_kill: true
  register: mounts_4

- name: mounts (different modes)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - source: /tmp
        target: /tmp
        type: bind
      - source: /tmp
        target: /somewhereelse
        type: bind
        read_only: false
    force_kill: true
  register: mounts_5

- name: mounts (endpoint collision)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - source: /home
        target: /x
        type: bind
      - source: /etc
        target: /x
        type: bind
        read_only: false
    force_kill: true
  register: mounts_6
  ignore_errors: true

- name: mounts (anonymous volume)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - target: /tmp
        type: volume
    force_kill: true
  register: mounts_7

- name: mounts (anonymous volume idempotency)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - target: /tmp
        type: volume
    force_kill: true
  register: mounts_8

- name: cleanup
  community.docker.docker_container:
    name: "{{ cname }}"
    state: absent
    force_kill: true
  diff: false

- ansible.builtin.assert:
    that:
      - mounts_1 is changed
      - mounts_2 is not changed
      - mounts_3 is not changed
      - mounts_4 is changed
      - mounts_5 is changed
      - mounts_6 is failed
      - "'The mount point \"/x\" appears twice in the mounts option' == mounts_6.msg"
      - mounts_7 is changed
      - mounts_8 is not changed

####################################################################
## tmpfs ###########################################################
####################################################################

- name: tmpfs
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - target: /cache1
        type: tmpfs
        tmpfs_mode: "1777"
        tmpfs_size: "1GB"
      - target: /cache2
        type: tmpfs
        tmpfs_mode: "1777"
        tmpfs_size: "1GB"
    force_kill: true
  register: tmpfs_1

- name: tmpfs (idempotency)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - target: /cache2
        type: tmpfs
        tmpfs_mode: "1777"
        tmpfs_size: "1GB"
      - target: /cache1
        type: tmpfs
        tmpfs_mode: "1777"
        tmpfs_size: "1GB"
    force_kill: true
  register: tmpfs_2

- name: tmpfs (more mounts)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - target: /cache1
        type: tmpfs
        tmpfs_mode: "1777"
        tmpfs_size: "1GB"
      - target: /cache2
        type: tmpfs
        tmpfs_mode: "1777"
        tmpfs_size: "1GB"
      - target: /cache3
        type: tmpfs
        tmpfs_mode: "1777"
        tmpfs_size: "1GB"
    force_kill: true
  register: tmpfs_3

- name: tmpfs (change mode)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - target: /cache1
        type: tmpfs
        tmpfs_mode: "1700"
        tmpfs_size: "1GB"
    force_kill: true
  register: tmpfs_4

- name: tmpfs (change size)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - target: /cache1
        type: tmpfs
        tmpfs_mode: "1700"
        tmpfs_size: "2GB"
    force_kill: true
  register: tmpfs_5

- name: cleanup
  community.docker.docker_container:
    name: "{{ cname }}"
    state: absent
    force_kill: true
  diff: false

- ansible.builtin.assert:
    that:
      - tmpfs_1 is changed
      - tmpfs_2 is not changed
      - tmpfs_3 is changed
      - tmpfs_4 is changed
      - tmpfs_5 is changed

####################################################################
## mounts + volumes ################################################
####################################################################

- name: mounts + volumes
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - source: /
        target: /whatever
        type: bind
        read_only: true
    volumes:
      - /tmp:/tmp
  register: mounts_volumes_1

- name: mounts + volumes (idempotency)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - source: /
        target: /whatever
        type: bind
        read_only: true
    volumes:
      - /tmp:/tmp
  register: mounts_volumes_2

- name: mounts + volumes (switching)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - source: /tmp
        target: /tmp
        type: bind
        read_only: false
    volumes:
      - /:/whatever:ro
    force_kill: true
  register: mounts_volumes_3

- name: mounts + volumes (collision, should fail)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    mounts:
      - source: /tmp
        target: /tmp
        type: bind
        read_only: false
    volumes:
      - /tmp:/tmp
    force_kill: true
  register: mounts_volumes_4
  ignore_errors: true

- name: cleanup
  community.docker.docker_container:
    name: "{{ cname }}"
    state: absent
    force_kill: true
  diff: false

- ansible.builtin.assert:
    that:
      - mounts_volumes_1 is changed
      - mounts_volumes_2 is not changed
      - mounts_volumes_3 is changed
      - mounts_volumes_4 is failed
      - "'The mount point \"/tmp\" appears both in the volumes and mounts option' in mounts_volumes_4.msg"

####################################################################
## volume_driver ###################################################
####################################################################

- name: volume_driver
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    volume_driver: local
    state: started
  register: volume_driver_1

- name: volume_driver (idempotency)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    volume_driver: local
    state: started
  register: volume_driver_2

- name: volume_driver (change)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    volume_driver: /
    state: started
    force_kill: true
  register: volume_driver_3

- name: cleanup
  community.docker.docker_container:
    name: "{{ cname }}"
    state: absent
    force_kill: true
  diff: false

- ansible.builtin.assert:
    that:
      - volume_driver_1 is changed
      - volume_driver_2 is not changed
      - volume_driver_3 is changed

####################################################################
## volumes #########################################################
####################################################################

- name: volumes
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    volumes:
      - "/tmp:/tmp"
      - "/:/whatever:rw,z"
      - "/anon:rw"
  register: volumes_1

- name: volumes (idempotency)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    volumes:
      - "/:/whatever:rw,z"
      - "/tmp:/tmp"
      - "/anon:rw"
  register: volumes_2

- name: volumes (less volumes)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    volumes:
      - "/tmp:/tmp"
  register: volumes_3

- name: volumes (more volumes)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    volumes:
      - "/tmp:/tmp"
      - "/tmp:/somewhereelse:ro,Z"
    force_kill: true
  register: volumes_4

- name: volumes (different modes)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    volumes:
      - "/tmp:/tmp"
      - "/tmp:/somewhereelse:ro"
    force_kill: true
  register: volumes_5

- name: volumes (collision)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    volumes:
      - "/etc:/tmp"
      - "/home:/tmp:ro"
    force_kill: true
  register: volumes_6
  ignore_errors: true

- name: cleanup
  community.docker.docker_container:
    name: "{{ cname }}"
    state: absent
    force_kill: true
  diff: false

- ansible.builtin.assert:
    that:
      - volumes_1 is changed
      - volumes_1.container.Config.Volumes | length == 1
      - volumes_1.container.Config.Volumes['/anon:rw'] | length == 0
      - volumes_2 is not changed
      - volumes_3 is not changed
      - volumes_4 is changed
      - not volumes_4.container.Config.Volumes
      - volumes_5 is changed
      - volumes_6 is failed
      - "'The mount point \"/tmp\" appears twice in the volumes option' in volumes_6.msg"

####################################################################
## volumes_from ####################################################
####################################################################

- name: start helpers
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ container_name }}"
    state: started
    volumes:
      - "{{ '/tmp:/tmp' if container_name == cname_h1 else '/:/whatever:ro' }}"
  loop:
    - "{{ cname_h1 }}"
    - "{{ cname_h2 }}"
  loop_control:
    loop_var: container_name

- name: volumes_from
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    volumes_from: "{{ cname_h1 }}"
  register: volumes_from_1

- name: volumes_from (idempotency)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    volumes_from: "{{ cname_h1 }}"
  register: volumes_from_2

- name: volumes_from (change)
  community.docker.docker_container:
    image: "{{ docker_test_image_alpine }}"
    command: '/bin/sh -c "sleep 10m"'
    name: "{{ cname }}"
    state: started
    volumes_from: "{{ cname_h2 }}"
    force_kill: true
  register: volumes_from_3

- name: cleanup
  community.docker.docker_container:
    name: "{{ container_name }}"
    state: absent
    force_kill: true
  loop:
    - "{{ cname }}"
    - "{{ cname_h1 }}"
    - "{{ cname_h2 }}"
  loop_control:
    loop_var: container_name
  diff: false

- ansible.builtin.assert:
    that:
      - volumes_from_1 is changed
      - volumes_from_2 is not changed
      - volumes_from_3 is changed

####################################################################
####################################################################
####################################################################
